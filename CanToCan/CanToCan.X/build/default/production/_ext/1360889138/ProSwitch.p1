Version 3.2 HI-TECH Software Intermediate Code
"86 ../Header\ProSwitch.h
[s S7 `uc 1 `uc 1 ]
[n S7 . UploadCnt Tick ]
"78 ../App/ProSwitch.c
[c E132 0 1 2 3 .. ]
[n E132 . INITCAN NORMAL TX TXING  ]
"48 ../Header\CanData.h
[s S5 `E132 1 `uc -> 8 `i `uc 1 `ul 1 ]
[n S5 . Status Buf Len ID ]
"173 ../Header\Public.h
[v _EarseBuf `(v ~T0 @X0 0 ef2`*uc`ui ]
"35 ../Header\Can.h
[v _CanDownSend `(v ~T0 @X0 0 ef1`S5 ]
"45 C:\Program Files (x86)\Microchip\xc8\v1.37\include\math.h
[v _pow `(d ~T0 @X0 0 ef2`d`d ]
"63 ../Header\Public.h
[s S1 `uc 1 `uc 1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 `ui 1 `uc 1 `uc 1 `uc 1 `uc 1 `ui 1 `ui 1 `ui 1 `ui 1 ]
[n S1 . Crc SensorFlag UpWarn UpDuanDian UpFuDian DownWarn DownDuanDian DownFuDian Addr Name CtrFlag Delay OffTimeout CurValue Tick UpLoadTick ]
"10 ../App/ProSwitch.c
[v _LocalSensors `S1 ~T0 @X0 -> 0 `x e ]
"101 ../Header\Public.h
[s S3 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc -> 15 `i `uc -> 15 `i `uc -> 24 `i `uc -> 24 `i `uc 1 `uc 1 `uc -> 4 `i `uc 1 `ui 1 `ui 1 `uc 1 `uc 1 `uc 1 `ui 1 `ui 1 ]
[n S3 . Addr Crc ForceControlFlag ForceControlPort CrossControlFlag CrossControlPort LocalTriggers LocalTriggerAddrs RemoteTriggers RemoteTriggerAddrs RelevanceLocalSensorCnt RelevanceRemoteSensorCnt Break3_0Addrs Break3_0Cnt Tick UpLoadTick ActCnt Flag TriggerAddr ActTick CurValue ]
"45 ../Header\CPU.h
[v _TimeChange `(v ~T0 @X0 0 ef ]
"134 ../Header\Public.h
[s S4 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `ui 1 `ui 1 `ui 1 `ui 1 ]
[n S4 . Addr AddrOffset Delay Vol UploadCnt CrcSendCnt InitDelay UploadFlag Get3_0 OfflineLianDongFlag TriggerLianDongFlag UpLoadTime OnlineFlag ]
"12 ../App/ProSwitch.c
[v _Sys `S4 ~T0 @X0 0 e ]
"9
[v _SYS_TICK_1S `Vui ~T0 @X0 0 e ]
"17
[v _PowerDataDeal `(v ~T0 @X0 0 ef1`S5 ]
"9
[v _SYS_TICK `Vui ~T0 @X0 0 e ]
"178 ../Header\Public.h
[v _FilterBreaker `(*S3 ~T0 @X0 0 ef1`uc ]
"8 ../App/ProSwitch.c
[v _Can `S5 ~T0 @X0 0 e ]
"13
[v _timeHex `ul ~T0 @X0 0 e ]
"36 ../Header\Can.h
[v _CanUpSend `(v ~T0 @X0 0 ef1`S5 ]
"191 ../Header\Public.h
[v _GetChuShu `(ui ~T0 @X0 0 ef1`uc ]
"174
[v _BufCopy `(v ~T0 @X0 0 ef3`*uc`*uc`ui ]
"15 ../App/ProSwitch.c
[v _CheckBreaker `(v ~T0 @X0 0 ef1`uc ]
"84 ../Header\Public.h
[s S2 `uc 1 `ui 1 `ui 1 `ui 1 `ui 1 `uc 1 `ui 1 `ui 1 ]
[n S2 . Addr UpDuanDian UpFuDian DownDuanDian DownFuDian CtrFlag Tick CurValue ]
"179
[v _GetBreakerByIndex `(*S3 ~T0 @X0 0 ef1`uc ]
"165
[v _MsTickDiff `(ui ~T0 @X0 0 ef1`ui ]
"187
[v _GetRemoteSensor `(*S2 ~T0 @X0 0 ef1`uc ]
"185
[v _GetRemoteSensorIndex `(uc ~T0 @X0 0 ef1`uc ]
"177
[v _GetBreaker `(*S3 ~T0 @X0 0 ef1`uc ]
[; ;Header\Public.h: 12: typedef unsigned char u8;
[; ;Header\Public.h: 13: typedef unsigned int u16;
[; ;Header\Public.h: 14: typedef unsigned long u32;
[; ;Header\Public.h: 15: typedef volatile unsigned char vu8;
[; ;Header\Public.h: 16: typedef volatile unsigned int vu16;
[; ;Header\Public.h: 63: typedef struct {
[; ;Header\Public.h: 64: u8 Crc;
[; ;Header\Public.h: 65: u8 SensorFlag;
[; ;Header\Public.h: 66: u16 UpWarn;
[; ;Header\Public.h: 67: u16 UpDuanDian;
[; ;Header\Public.h: 68: u16 UpFuDian;
[; ;Header\Public.h: 69: u16 DownWarn;
[; ;Header\Public.h: 70: u16 DownDuanDian;
[; ;Header\Public.h: 71: u16 DownFuDian;
[; ;Header\Public.h: 73: u8 Addr;
[; ;Header\Public.h: 74: u8 Name;
[; ;Header\Public.h: 75: u8 CtrFlag;
[; ;Header\Public.h: 76: u8 Delay;
[; ;Header\Public.h: 78: u16 OffTimeout;
[; ;Header\Public.h: 79: u16 CurValue;
[; ;Header\Public.h: 80: u16 Tick;
[; ;Header\Public.h: 81: u16 UpLoadTick;
[; ;Header\Public.h: 82: } _LocalSensor;
[; ;Header\Public.h: 84: typedef struct {
[; ;Header\Public.h: 85: u8 Addr;
[; ;Header\Public.h: 86: u16 UpDuanDian;
[; ;Header\Public.h: 87: u16 UpFuDian;
[; ;Header\Public.h: 88: u16 DownDuanDian;
[; ;Header\Public.h: 89: u16 DownFuDian;
[; ;Header\Public.h: 91: u8 CtrFlag;
[; ;Header\Public.h: 92: u16 Tick;
[; ;Header\Public.h: 93: u16 CurValue;
[; ;Header\Public.h: 94: } _RemoteSensor;
[; ;Header\Public.h: 101: typedef struct {
[; ;Header\Public.h: 102: u8 Addr;
[; ;Header\Public.h: 103: u8 Crc;
[; ;Header\Public.h: 104: u8 ForceControlFlag;
[; ;Header\Public.h: 105: u8 ForceControlPort;
[; ;Header\Public.h: 106: u8 CrossControlFlag;
[; ;Header\Public.h: 107: u8 CrossControlPort;
[; ;Header\Public.h: 109: u8 LocalTriggers[15];
[; ;Header\Public.h: 110: u8 LocalTriggerAddrs[15];
[; ;Header\Public.h: 112: u8 RemoteTriggers[24];
[; ;Header\Public.h: 113: u8 RemoteTriggerAddrs[24];
[; ;Header\Public.h: 115: u8 RelevanceLocalSensorCnt;
[; ;Header\Public.h: 116: u8 RelevanceRemoteSensorCnt;
[; ;Header\Public.h: 118: u8 Break3_0Addrs[4];
[; ;Header\Public.h: 119: u8 Break3_0Cnt;
[; ;Header\Public.h: 120: u16 Tick;
[; ;Header\Public.h: 121: u16 UpLoadTick;
[; ;Header\Public.h: 122: u8 ActCnt;
[; ;Header\Public.h: 123: u8 Flag;
[; ;Header\Public.h: 125: u8 TriggerAddr;
[; ;Header\Public.h: 126: u16 ActTick;
[; ;Header\Public.h: 127: u16 CurValue;
[; ;Header\Public.h: 128: } _Breaker;
[; ;Header\Public.h: 134: typedef struct {
[; ;Header\Public.h: 135: u8 Addr;
[; ;Header\Public.h: 136: u8 AddrOffset;
[; ;Header\Public.h: 137: u8 Delay;
[; ;Header\Public.h: 138: u8 Vol;
[; ;Header\Public.h: 139: u8 UploadCnt;
[; ;Header\Public.h: 140: u8 CrcSendCnt;
[; ;Header\Public.h: 141: u8 InitDelay;
[; ;Header\Public.h: 142: u8 UploadFlag;
[; ;Header\Public.h: 143: u8 Get3_0;
[; ;Header\Public.h: 145: u16 OfflineLianDongFlag;
[; ;Header\Public.h: 146: u16 TriggerLianDongFlag;
[; ;Header\Public.h: 147: u16 UpLoadTime;
[; ;Header\Public.h: 148: u16 OnlineFlag;
[; ;Header\Public.h: 149: } CSys;
[; ;Header\Public.h: 151: typedef enum {
[; ;Header\Public.h: 152: LedRunLevel,
[; ;Header\Public.h: 153: VoltageSample,
[; ;Header\Public.h: 154: CanUpLevel,
[; ;Header\Public.h: 155: CanDownLevel,
[; ;Header\Public.h: 156: SyncClkLevel,
[; ;Header\Public.h: 157: OnlineCheckLevel,
[; ;Header\Public.h: 158: CheckDuandianLevel,
[; ;Header\Public.h: 159: TimeLevel,
[; ;Header\Public.h: 160: PowerUploadLevel,
[; ;Header\Public.h: 161: UploadSwitcherInfo,
[; ;Header\Public.h: 163: } CRunLevel;
[; ;Header\Public.h: 165: u16 MsTickDiff(u16 tick);
[; ;Header\Public.h: 166: u16 SecTickDiff(u16 tick);
[; ;Header\Public.h: 167: u8 CRC16Check(u8 *buf, u8 len);
[; ;Header\Public.h: 168: void CRC16(u8 value);
[; ;Header\Public.h: 169: void delay_us(u16 time);
[; ;Header\Public.h: 170: u16 CalCrc16(u8 *buf, u8 len);
[; ;Header\Public.h: 171: u16 Us100TickDiff(u16 tick);
[; ;Header\Public.h: 172: u16 SecTickDiff(u16 tick);
[; ;Header\Public.h: 173: void EarseBuf(u8 *buf, u16 len);
[; ;Header\Public.h: 174: void BufCopy(u8 *s, u8 *d, u16 len);
[; ;Header\Public.h: 175: u16 CalCrcInit(u8 *buf, u16 len, u8 flag);
[; ;Header\Public.h: 177: _Breaker* GetBreaker(u8 addr);
[; ;Header\Public.h: 178: _Breaker* FilterBreaker(u8 addr);
[; ;Header\Public.h: 179: _Breaker* GetBreakerByIndex(u8 index);
[; ;Header\Public.h: 180: u8 GetBreakerIndex(u8 addr);
[; ;Header\Public.h: 183: _RemoteSensor* FilterRemoteSensor(u8 addr);
[; ;Header\Public.h: 185: u8 GetRemoteSensorIndex(u8 addr);
[; ;Header\Public.h: 186: _RemoteSensor* GetRemoteSensorByIndex(u8 index);
[; ;Header\Public.h: 187: _RemoteSensor* GetRemoteSensor(u8 addr);
[; ;Header\Public.h: 189: void CheckRemoteSensor(void);
[; ;Header\Public.h: 191: u16 GetChuShu(u8 flag);
[; ;Header\CanData.h: 39: typedef enum
[; ;Header\CanData.h: 40: {
[; ;Header\CanData.h: 41: INITCAN,
[; ;Header\CanData.h: 42: NORMAL,
[; ;Header\CanData.h: 43: TX,
[; ;Header\CanData.h: 44: TXING,
[; ;Header\CanData.h: 45: }CCanStatus;
[; ;Header\CanData.h: 47: typedef struct
[; ;Header\CanData.h: 48: {
[; ;Header\CanData.h: 49: CCanStatus Status;
[; ;Header\CanData.h: 50: u8 Buf[8];
[; ;Header\CanData.h: 51: u8 Len;
[; ;Header\CanData.h: 52: u32 ID;
[; ;Header\CanData.h: 53: }CCan;
[; ;Header\CanData.h: 55: typedef struct
[; ;Header\CanData.h: 56: {
[; ;Header\CanData.h: 57: u8 R;
[; ;Header\CanData.h: 58: u8 W;
[; ;Header\CanData.h: 59: u8 Addr;
[; ;Header\CanData.h: 60: u8 InitValue[100];
[; ;Header\CanData.h: 61: }_InitInfo;
[; ;Header\CanData.h: 63: void CanUpReceiveFunc(void);
[; ;Header\CanData.h: 64: void CanDownReceiveFunc(void);
[; ;Header\CanData.h: 65: void UpdateInfo(void);
[; ;Header\ProSwitch.h: 85: typedef struct
[; ;Header\ProSwitch.h: 86: {
[; ;Header\ProSwitch.h: 87: u8 UploadCnt;
[; ;Header\ProSwitch.h: 88: u8 Tick;
[; ;Header\ProSwitch.h: 89: }_PowerInfoUploader;
[; ;Header\ProSwitch.h: 90: void CanProSwitch(CCan Can_Peking);
[; ;Header\ProSwitch.h: 91: void SyncClk(void);
[; ;Header\ProSwitch.h: 92: void SetWornValue(u8 Addr);
[; ;Header\ProSwitch.h: 93: void RePower(u8 Addr);
[; ;Header\ProSwitch.h: 94: void DuanDianPro(void);
[; ;Header\ProSwitch.h: 95: u32 MakeFeimoCanId(u8 FramCnt, u8 Cmd, u8 CtrFlag, u8 Dir, u8 Type, u8 Addr);
[; ;Header\ProSwitch.h: 96: void UploadPowerData(void);
[; ;Header\ProSwitch.h: 97: void UpLoadSensorData(void);
[; ;Header\ProSwitch.h: 98: void UpLoadControlInfo(void);
[; ;Header\ProSwitch.h: 99: void Get3_0Config(void);
[; ;Header\ProSwitch.h: 100: void SensorOnlineCheck(void);
[; ;Header\Can.h: 23: void CanDownInit(void);
[; ;Header\Can.h: 24: u8 ReadStatus(void);
[; ;Header\Can.h: 25: void ModifyReg(u8 addr,u8 mask,u8 val);
[; ;Header\Can.h: 26: void ReadBurstRegCan(u8 addr,u8 *buf,u8 len);
[; ;Header\Can.h: 27: u8 ReadRegCan(u8 addr);
[; ;Header\Can.h: 28: void WriteBurstRegCan(u8 addr, u8 *buf, u8 len);
[; ;Header\Can.h: 29: void WriteRegCan(u8 addr, u8 value);
[; ;Header\Can.h: 30: void MCP2515Reset(void);
[; ;Header\Can.h: 31: u8 SendByte(u8 dat);
[; ;Header\Can.h: 33: void CanUpInit(void);
[; ;Header\Can.h: 34: void CanUpSendData(void);
[; ;Header\Can.h: 35: void CanDownSend(CCan CanData);
[; ;Header\Can.h: 36: void CanUpSend(CCan CanData);
[; ;Header\CPU.h: 13: typedef struct
[; ;Header\CPU.h: 14: {
[; ;Header\CPU.h: 15: u8 Buf[7];
[; ;Header\CPU.h: 16: u8 HexTime[7];
[; ;Header\CPU.h: 17: }CTime;
[; ;Header\CPU.h: 19: void CpuInit(void);
[; ;Header\CPU.h: 20: void Timer0Init(void);
[; ;Header\CPU.h: 21: void Timer2Init(void);
[; ;Header\CPU.h: 22: void VolSample(void);
[; ;Header\CPU.h: 23: void ReadConfig(void);
[; ;Header\CPU.h: 24: void ReadAddr(void);
[; ;Header\CPU.h: 25: void IoInit(void);
[; ;Header\CPU.h: 26: void AdInit(void);
[; ;Header\CPU.h: 27: u16 GetVolInputValue(u8 ch);
[; ;Header\CPU.h: 28: void VolSample(void);
[; ;Header\CPU.h: 32: void WriteLocalSenserConfig(_LocalSensor Sensor);
[; ;Header\CPU.h: 33: void ReadAllLocalSensorConfig(void);
[; ;Header\CPU.h: 34: void EraseLocalSenser(u8 Addr);
[; ;Header\CPU.h: 36: void ReadAllRemoteSensor(void);
[; ;Header\CPU.h: 37: void ReadRemoteSensor(u8 Index);
[; ;Header\CPU.h: 38: void WriteRemoteSensor(_RemoteSensor* RemoteSensor);
[; ;Header\CPU.h: 39: void EraseRemoteSensor(u8 Addr);
[; ;Header\CPU.h: 41: void WriteBreaker(_Breaker Breaker);
[; ;Header\CPU.h: 42: void EraseBreaker(u8 Addr);
[; ;Header\CPU.h: 43: void ReadAllBreaker(void);
[; ;Header\CPU.h: 44: void TimePro(void);
[; ;Header\CPU.h: 45: void TimeChange(void);
[; ;Header\CPU.h: 47: void WriteBurstEEprom(u16 addr,u8 *buf,u16 len);
[; ;Header\CPU.h: 48: void ReadBurstEEprom(u16 addr,u8 *buf,u16 len);
[; ;math.h: 30: extern double fabs(double);
[; ;math.h: 31: extern double floor(double);
[; ;math.h: 32: extern double ceil(double);
[; ;math.h: 33: extern double modf(double, double *);
[; ;math.h: 34: extern double sqrt(double);
[; ;math.h: 35: extern double atof(const char *);
[; ;math.h: 36: extern double sin(double) ;
[; ;math.h: 37: extern double cos(double) ;
[; ;math.h: 38: extern double tan(double) ;
[; ;math.h: 39: extern double asin(double) ;
[; ;math.h: 40: extern double acos(double) ;
[; ;math.h: 41: extern double atan(double);
[; ;math.h: 42: extern double atan2(double, double) ;
[; ;math.h: 43: extern double log(double);
[; ;math.h: 44: extern double log10(double);
[; ;math.h: 45: extern double pow(double, double) ;
[; ;math.h: 46: extern double exp(double) ;
[; ;math.h: 47: extern double sinh(double) ;
[; ;math.h: 48: extern double cosh(double) ;
[; ;math.h: 49: extern double tanh(double);
[; ;math.h: 50: extern double eval_poly(double, const double *, int);
[; ;math.h: 51: extern double frexp(double, int *);
[; ;math.h: 52: extern double ldexp(double, int);
[; ;math.h: 53: extern double fmod(double, double);
[; ;math.h: 54: extern double trunc(double);
[; ;math.h: 55: extern double round(double);
[v F336 `uc ~T0 @X0 -> 8 `i t ]
"6 ../App/ProSwitch.c
[v _PekingPowerData `F336 ~T0 @X0 -> 7 `i e ]
[; ;ProSwitch.c: 6: u8 PekingPowerData[7][8];
"7
[v _PowerInfoUploader `S7 ~T0 @X0 1 e ]
[; ;ProSwitch.c: 7: _PowerInfoUploader PowerInfoUploader;
[; ;ProSwitch.c: 8: extern CCan Can;
[; ;ProSwitch.c: 9: extern vu16 SYS_TICK, SYS_TICK_1S;
[; ;ProSwitch.c: 10: extern _LocalSensor LocalSensors[16];
[; ;ProSwitch.c: 11: extern _RemoteSensor RemoteSensors[24];
[; ;ProSwitch.c: 12: extern CSys Sys;
[; ;ProSwitch.c: 13: extern u32 timeHex;
[; ;ProSwitch.c: 15: void CheckBreaker(u8 BreakAddr);
[; ;ProSwitch.c: 16: void InitUpLoadDeal(_LocalSensor InitSenser);
[; ;ProSwitch.c: 17: void PowerDataDeal(CCan PowerDataCan);
"20
[v _SenserSwitch_B2F `uc ~T0 @X0 -> 0 `x e ]
[i _SenserSwitch_B2F
:U ..
-> -> 238 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 238 `i `uc
-> -> 4 `i `uc
-> -> 238 `i `uc
-> -> 6 `i `uc
-> -> 238 `i `uc
-> -> 7 `i `uc
"21
-> -> 12 `i `uc
-> -> 9 `i `uc
-> -> 5 `i `uc
-> -> 34 `i `uc
-> -> 15 `i `uc
-> -> 31 `i `uc
-> -> 8 `i `uc
-> -> 14 `i `uc
-> -> 42 `i `uc
-> -> 238 `i `uc
"22
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 12 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
"23
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
-> -> 238 `i `uc
"24
-> -> 57 `i `uc
-> -> 238 `i `uc
-> -> 3 `i `uc
-> -> 3 `i `uc
..
]
[; ;ProSwitch.c: 20: u8 SenserSwitch_B2F[] = {0xEE, 0x00, 0x01, 0x02, 0xEE, 0x04, 0xEE, 0x06, 0xEE, 0x07,
[; ;ProSwitch.c: 21: 0x0C, 0x09, 0x05, 0x22, 0x0F, 0x1F, 0x08, 0x0E, 0x2A, 0xEE,
[; ;ProSwitch.c: 22: 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0x0C, 0xEE, 0xEE, 0xEE, 0xEE,
[; ;ProSwitch.c: 23: 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE, 0xEE,
[; ;ProSwitch.c: 24: 0x39, 0xEE, 0x03, 0x03};
"25
[v _SenserSwitch_F2B `uc ~T0 @X0 -> 0 `x e ]
[i _SenserSwitch_F2B
:U ..
-> -> 1 `i `uc
-> -> 2 `i `uc
-> -> 3 `i `uc
-> -> 43 `i `uc
-> -> 5 `i `uc
-> -> 12 `i `uc
-> -> 7 `i `uc
-> -> 9 `i `uc
-> -> 16 `i `uc
-> -> 11 `i `uc
"26
-> -> 19 `i `uc
-> -> 237 `i `uc
-> -> 10 `i `uc
-> -> 237 `i `uc
-> -> 17 `i `uc
-> -> 14 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
"27
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
"28
-> -> 15 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 13 `i `uc
-> -> 40 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 237 `i `uc
-> -> 18 `i `uc
..
]
[; ;ProSwitch.c: 25: u8 SenserSwitch_F2B[] = {0x01, 0x02, 0x03, 0x2B, 0x05, 0x0C, 0x07, 0x09, 0x10, 0x0B,
[; ;ProSwitch.c: 26: 0x13, 0xED, 0x0A, 0xED, 0x11, 0x0E, 0xED, 0xED, 0xED, 0xED,
[; ;ProSwitch.c: 27: 0xED, 0xED, 0xED, 0xED, 0xED, 0xED, 0xED, 0xED, 0xED, 0xED, 0xED,
[; ;ProSwitch.c: 28: 0x0F, 0xED, 0xED, 0x0D, 0x28, 0xED, 0xED, 0xED, 0xED, 0xED, 0xED, 0x12};
"29
[v _senserState1 `uc ~T0 @X0 -> 3 `i e ]
[i _senserState1
:U ..
-> -> 65 `i `uc
-> -> 0 `i `uc
-> -> 0 `i `uc
..
]
[; ;ProSwitch.c: 29: u8 senserState1[3] = {0x41, 0x00, 0x00};
"30
[v _senserState2 `uc ~T0 @X0 -> 3 `i e ]
[i _senserState2
:U ..
-> -> 1 `i `uc
-> -> 128 `i `uc
-> -> 0 `i `uc
..
]
[; ;ProSwitch.c: 30: u8 senserState2[3] = {0x01, 0x80, 0x00};
"31
[v _senserState3 `uc ~T0 @X0 -> 3 `i e ]
[i _senserState3
:U ..
-> -> 2 `i `uc
-> -> 128 `i `uc
-> -> 0 `i `uc
..
]
[; ;ProSwitch.c: 31: u8 senserState3[3] = {0x02, 0x80, 0x00};
"32
[v _senserState4 `uc ~T0 @X0 -> 3 `i e ]
[i _senserState4
:U ..
-> -> 2 `i `uc
-> -> 192 `i `uc
-> -> 1 `i `uc
..
]
[; ;ProSwitch.c: 32: u8 senserState4[3] = {0x02, 0xC0, 0x01};
"33
[v _sensor_result `uc ~T0 @X0 -> 3 `i e ]
[; ;ProSwitch.c: 33: u8 sensor_result[3];
"38
[v _MakePekingCanId `(ul ~T0 @X0 1 ef5`uc`uc`uc`uc`uc ]
"39
{
[; ;ProSwitch.c: 38: u32 MakePekingCanId(u8 Priority, u8 SenserType, u8 SenserAddr, u8 Dir, u8 Cmd)
[; ;ProSwitch.c: 39: {
[e :U _MakePekingCanId ]
"38
[v _Priority `uc ~T0 @X0 1 r1 ]
[v _SenserType `uc ~T0 @X0 1 r2 ]
[v _SenserAddr `uc ~T0 @X0 1 r3 ]
[v _Dir `uc ~T0 @X0 1 r4 ]
[v _Cmd `uc ~T0 @X0 1 r5 ]
"39
[f ]
"40
[v _PekingCanId `ul ~T0 @X0 1 a ]
"41
[v _temp1 `ul ~T0 @X0 1 a ]
[v _temp2 `ul ~T0 @X0 1 a ]
[; ;ProSwitch.c: 40: u32 PekingCanId;
[; ;ProSwitch.c: 41: u32 temp1, temp2;
[; ;ProSwitch.c: 42: PekingCanId = (Priority & 0x07);
"42
[e = _PekingCanId -> -> & -> _Priority `i -> 7 `i `l `ul ]
[; ;ProSwitch.c: 43: PekingCanId <<= 6;
"43
[e =<< _PekingCanId -> 6 `i ]
[; ;ProSwitch.c: 44: PekingCanId += (SenserType & 0x3F);
"44
[e =+ _PekingCanId -> -> & -> _SenserType `i -> 63 `i `l `ul ]
[; ;ProSwitch.c: 45: PekingCanId <<= 7;
"45
[e =<< _PekingCanId -> 7 `i ]
[; ;ProSwitch.c: 46: PekingCanId += (SenserAddr & 0x7F);
"46
[e =+ _PekingCanId -> -> & -> _SenserAddr `i -> 127 `i `l `ul ]
[; ;ProSwitch.c: 47: PekingCanId <<= 1;
"47
[e =<< _PekingCanId -> 1 `i ]
[; ;ProSwitch.c: 48: PekingCanId += (Dir & 0x01);
"48
[e =+ _PekingCanId -> -> & -> _Dir `i -> 1 `i `l `ul ]
[; ;ProSwitch.c: 49: PekingCanId <<= 12;
"49
[e =<< _PekingCanId -> 12 `i ]
[; ;ProSwitch.c: 50: PekingCanId += (Cmd & 0x1F);
"50
[e =+ _PekingCanId -> -> & -> _Cmd `i -> 31 `i `l `ul ]
[; ;ProSwitch.c: 52: temp1 = PekingCanId >> 18;
"52
[e = _temp1 >> _PekingCanId -> 18 `i ]
[; ;ProSwitch.c: 53: temp2 = (PekingCanId & 0x001FFFFF) << 11;
"53
[e = _temp2 << & _PekingCanId -> -> 2097151 `l `ul -> 11 `i ]
[; ;ProSwitch.c: 54: PekingCanId = temp1 | temp2;
"54
[e = _PekingCanId | _temp1 _temp2 ]
[; ;ProSwitch.c: 56: return PekingCanId;
"56
[e ) _PekingCanId ]
[e $UE 9  ]
[; ;ProSwitch.c: 57: }
"57
[e :UE 9 ]
}
"59
[v _MakeFeimoCanId `(ul ~T0 @X0 1 ef6`uc`uc`uc`uc`uc`uc ]
"60
{
[; ;ProSwitch.c: 59: u32 MakeFeimoCanId(u8 FramCnt, u8 Cmd, u8 CtrFlag, u8 Dir, u8 Type, u8 Addr)
[; ;ProSwitch.c: 60: {
[e :U _MakeFeimoCanId ]
"59
[v _FramCnt `uc ~T0 @X0 1 r1 ]
[v _Cmd `uc ~T0 @X0 1 r2 ]
[v _CtrFlag `uc ~T0 @X0 1 r3 ]
[v _Dir `uc ~T0 @X0 1 r4 ]
[v _Type `uc ~T0 @X0 1 r5 ]
[v _Addr `uc ~T0 @X0 1 r6 ]
"60
[f ]
"61
[v _FeimoId `ul ~T0 @X0 1 a ]
[; ;ProSwitch.c: 61: u32 FeimoId = 0;
[e = _FeimoId -> -> -> 0 `i `l `ul ]
[; ;ProSwitch.c: 62: FeimoId = FramCnt;
"62
[e = _FeimoId -> _FramCnt `ul ]
[; ;ProSwitch.c: 63: FeimoId <<= 7;
"63
[e =<< _FeimoId -> 7 `i ]
[; ;ProSwitch.c: 64: FeimoId += Cmd;
"64
[e =+ _FeimoId -> _Cmd `ul ]
[; ;ProSwitch.c: 65: FeimoId <<= 2;
"65
[e =<< _FeimoId -> 2 `i ]
[; ;ProSwitch.c: 66: FeimoId += CtrFlag;
"66
[e =+ _FeimoId -> _CtrFlag `ul ]
[; ;ProSwitch.c: 67: FeimoId <<= 1;
"67
[e =<< _FeimoId -> 1 `i ]
[; ;ProSwitch.c: 68: FeimoId += Dir;
"68
[e =+ _FeimoId -> _Dir `ul ]
[; ;ProSwitch.c: 69: FeimoId <<= 6;
"69
[e =<< _FeimoId -> 6 `i ]
[; ;ProSwitch.c: 70: FeimoId += Type;
"70
[e =+ _FeimoId -> _Type `ul ]
[; ;ProSwitch.c: 71: FeimoId <<= 8;
"71
[e =<< _FeimoId -> 8 `i ]
[; ;ProSwitch.c: 72: FeimoId += Addr;
"72
[e =+ _FeimoId -> _Addr `ul ]
[; ;ProSwitch.c: 73: return FeimoId;
"73
[e ) _FeimoId ]
[e $UE 10  ]
[; ;ProSwitch.c: 74: }
"74
[e :UE 10 ]
}
"76
[v _BreakPower `(v ~T0 @X0 1 ef1`uc ]
"77
{
[; ;ProSwitch.c: 76: void BreakPower(u8 Addr)
[; ;ProSwitch.c: 77: {
[e :U _BreakPower ]
"76
[v _Addr `uc ~T0 @X0 1 r1 ]
"77
[f ]
"78
[v _BreakCan `S5 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 78: CCan BreakCan;
[; ;ProSwitch.c: 79: BreakCan.ID = MakePekingCanId(0, 0x0F, Addr, 0x00, 0x00);
"79
[e = . _BreakCan 3 ( _MakePekingCanId (4 , , , , -> -> 0 `i `uc -> -> 15 `i `uc _Addr -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;ProSwitch.c: 80: BreakCan.Buf[0] = 0x01;
"80
[e = *U + &U . _BreakCan 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _BreakCan 1 `ui `ux -> -> 1 `i `uc ]
[; ;ProSwitch.c: 81: EarseBuf(&BreakCan.Buf[1], 7);
"81
[e ( _EarseBuf (2 , &U *U + &U . _BreakCan 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _BreakCan 1 `ui `ux -> -> 7 `i `ui ]
[; ;ProSwitch.c: 82: BreakCan.Len = 8;
"82
[e = . _BreakCan 2 -> -> 8 `i `uc ]
[; ;ProSwitch.c: 83: CanDownSend(BreakCan);
"83
[e ( _CanDownSend (1 _BreakCan ]
[; ;ProSwitch.c: 84: }
"84
[e :UE 11 ]
}
"86
[v _RePower `(v ~T0 @X0 1 ef1`uc ]
"87
{
[; ;ProSwitch.c: 86: void RePower(u8 Addr)
[; ;ProSwitch.c: 87: {
[e :U _RePower ]
"86
[v _Addr `uc ~T0 @X0 1 r1 ]
"87
[f ]
"88
[v _BreakCan `S5 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 88: CCan BreakCan;
[; ;ProSwitch.c: 89: BreakCan.ID = MakePekingCanId(0, 0x0F, Addr, 0x00, 0x00);
"89
[e = . _BreakCan 3 ( _MakePekingCanId (4 , , , , -> -> 0 `i `uc -> -> 15 `i `uc _Addr -> -> 0 `i `uc -> -> 0 `i `uc ]
[; ;ProSwitch.c: 90: BreakCan.Buf[0] = 0x02;
"90
[e = *U + &U . _BreakCan 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _BreakCan 1 `ui `ux -> -> 2 `i `uc ]
[; ;ProSwitch.c: 91: EarseBuf(&BreakCan.Buf[1], 7);
"91
[e ( _EarseBuf (2 , &U *U + &U . _BreakCan 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _BreakCan 1 `ui `ux -> -> 7 `i `ui ]
[; ;ProSwitch.c: 92: BreakCan.Len = 8;
"92
[e = . _BreakCan 2 -> -> 8 `i `uc ]
[; ;ProSwitch.c: 93: CanDownSend(BreakCan);
"93
[e ( _CanDownSend (1 _BreakCan ]
[; ;ProSwitch.c: 94: }
"94
[e :UE 12 ]
}
"101
[v _BufCompare `(uc ~T0 @X0 1 ef3`*uc`*uc`uc ]
"102
{
[; ;ProSwitch.c: 101: u8 BufCompare(u8 *s, u8 *d, u8 len)
[; ;ProSwitch.c: 102: {
[e :U _BufCompare ]
"101
[v _s `*uc ~T0 @X0 1 r1 ]
[v _d `*uc ~T0 @X0 1 r2 ]
[v _len `uc ~T0 @X0 1 r3 ]
"102
[f ]
"103
[v _i `uc ~T0 @X0 1 a ]
[; ;ProSwitch.c: 103: u8 i;
[; ;ProSwitch.c: 104: for (i = 0; i < len; i++)
"104
{
[e = _i -> -> 0 `i `uc ]
[e $U 17  ]
"105
[e :U 14 ]
[; ;ProSwitch.c: 105: {
{
[; ;ProSwitch.c: 106: if (*(s + i) != *(d + i))
"106
[e $ ! != -> *U + _s * -> _i `ux -> -> # *U _s `ui `ux `i -> *U + _d * -> _i `ux -> -> # *U _d `ui `ux `i 18  ]
[; ;ProSwitch.c: 107: return 0;
"107
[e ) -> -> 0 `i `uc ]
[e $UE 13  ]
[e :U 18 ]
"108
}
"104
[e ++ _i -> -> 1 `i `uc ]
[e :U 17 ]
[e $ < -> _i `i -> _len `i 14  ]
[e :U 15 ]
"108
}
[; ;ProSwitch.c: 108: }
[; ;ProSwitch.c: 109: return 1;
"109
[e ) -> -> 1 `i `uc ]
[e $UE 13  ]
[; ;ProSwitch.c: 110: }
"110
[e :UE 13 ]
}
"117
[v _ConverToByeFloat `(d ~T0 @X0 1 ef1`*uc ]
"118
{
[; ;ProSwitch.c: 117: double ConverToByeFloat(u8 *tran)
[; ;ProSwitch.c: 118: {
[e :U _ConverToByeFloat ]
"117
[v _tran `*uc ~T0 @X0 1 r1 ]
"118
[f ]
"119
[v _ddvalue `d ~T0 @X0 1 a ]
"120
[v _immm `ui ~T0 @X0 1 a ]
[; ;ProSwitch.c: 119: double ddvalue;
[; ;ProSwitch.c: 120: unsigned int immm = tran[1] *256 + tran[2];
[e = _immm -> + * -> *U + _tran * -> -> 1 `i `x -> -> # *U _tran `i `x `i -> 256 `i -> *U + _tran * -> -> 2 `i `x -> -> # *U _tran `i `x `i `ui ]
"121
[v _signal `i ~T0 @X0 1 a ]
[; ;ProSwitch.c: 121: int signal = ((tran[0] & 0x80) > 0 ? -1 : 1);
[e = _signal ? > & -> *U + _tran * -> -> 0 `i `x -> -> # *U _tran `i `x `i -> 128 `i -> 0 `i : -U -> 1 `i -> 1 `i ]
"122
[v _radixsignal `i ~T0 @X0 1 a ]
[; ;ProSwitch.c: 122: int radixsignal = ((tran[0] & 0x40) > 0 ? -1 : 1);
[e = _radixsignal ? > & -> *U + _tran * -> -> 0 `i `x -> -> # *U _tran `i `x `i -> 64 `i -> 0 `i : -U -> 1 `i -> 1 `i ]
"123
[v _radix `i ~T0 @X0 1 a ]
[; ;ProSwitch.c: 123: int radix = tran[0] & 0x3F;
[e = _radix & -> *U + _tran * -> -> 0 `i `x -> -> # *U _tran `i `x `i -> 63 `i ]
[; ;ProSwitch.c: 124: if (radixsignal == -1)
"124
[e $ ! == _radixsignal -U -> 1 `i 20  ]
[; ;ProSwitch.c: 125: radix = (radix ^ 0x3F) + 1;
"125
[e = _radix + ^ _radix -> 63 `i -> 1 `i ]
[e :U 20 ]
[; ;ProSwitch.c: 126: radix = radix * radixsignal;
"126
[e = _radix * _radix _radixsignal ]
[; ;ProSwitch.c: 127: ddvalue = signal * immm * pow(2, (radix - 16));
"127
[e = _ddvalue * -> * -> _signal `ui _immm `d ( _pow (2 , -> -> 2 `i `d -> - _radix -> 16 `i `d ]
[; ;ProSwitch.c: 128: return(ddvalue);
"128
[e ) _ddvalue ]
[e $UE 19  ]
[; ;ProSwitch.c: 129: }
"129
[e :UE 19 ]
}
"134
[v _ConverToMFloat `(v ~T0 @X0 1 ef1`d ]
"135
{
[; ;ProSwitch.c: 134: void ConverToMFloat(double dvalue)
[; ;ProSwitch.c: 135: {
[e :U _ConverToMFloat ]
"134
[v _dvalue `d ~T0 @X0 1 r1 ]
"135
[f ]
"136
[v _kk `uc ~T0 @X0 1 a ]
[; ;ProSwitch.c: 136: unsigned char kk;
[; ;ProSwitch.c: 137: sensor_result[0] = sensor_result[1] = sensor_result[2] = 0;
"137
[e = *U + &U _sensor_result * -> -> -> 0 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux = *U + &U _sensor_result * -> -> -> 1 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux = *U + &U _sensor_result * -> -> -> 2 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 139: if (dvalue == 0)
"139
[e $ ! == _dvalue -> -> 0 `i `d 22  ]
[; ;ProSwitch.c: 140: {
"140
{
[; ;ProSwitch.c: 141: sensor_result[0] = 0x41;
"141
[e = *U + &U _sensor_result * -> -> -> 0 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux -> -> 65 `i `uc ]
"142
}
[; ;ProSwitch.c: 142: } else
[e $U 23  ]
[e :U 22 ]
[; ;ProSwitch.c: 143: {
"143
{
[; ;ProSwitch.c: 144: if (dvalue < 0)
"144
[e $ ! < _dvalue -> -> 0 `i `d 24  ]
[; ;ProSwitch.c: 145: {
"145
{
[; ;ProSwitch.c: 146: sensor_result[0] = 0x80;
"146
[e = *U + &U _sensor_result * -> -> -> 0 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux -> -> 128 `i `uc ]
[; ;ProSwitch.c: 147: dvalue = -dvalue;
"147
[e = _dvalue -U _dvalue ]
"148
}
[e :U 24 ]
[; ;ProSwitch.c: 148: }
[; ;ProSwitch.c: 150: if (dvalue >= 1.0)
"150
[e $ ! >= _dvalue .1.0 25  ]
[; ;ProSwitch.c: 151: {
"151
{
"152
[v _radix `i ~T0 @X0 1 a ]
[; ;ProSwitch.c: 152: int radix = 1;
[e = _radix -> 1 `i ]
"153
[v _itemp `d ~T0 @X0 1 a ]
[; ;ProSwitch.c: 153: double itemp = dvalue;
[e = _itemp _dvalue ]
[; ;ProSwitch.c: 154: while ((itemp = itemp / 2.0) >= 1.0)
"154
[e $U 26  ]
[e :U 27 ]
[; ;ProSwitch.c: 155: {
"155
{
[; ;ProSwitch.c: 156: radix += 1;
"156
[e =+ _radix -> 1 `i ]
"157
}
[e :U 26 ]
"154
[e $ >= = _itemp / _itemp .2.0 .1.0 27  ]
[e :U 28 ]
[; ;ProSwitch.c: 157: }
[; ;ProSwitch.c: 158: sensor_result[0] += radix;
"158
[e =+ *U + &U _sensor_result * -> -> -> 0 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux -> _radix `uc ]
[; ;ProSwitch.c: 160: dvalue = dvalue / pow(2, radix);
"160
[e = _dvalue / _dvalue ( _pow (2 , -> -> 2 `i `d -> _radix `d ]
[; ;ProSwitch.c: 161: for (kk = 0; kk < 16; kk++)
"161
{
[e = _kk -> -> 0 `i `uc ]
[e $ < -> _kk `i -> 16 `i 29  ]
[e $U 30  ]
"162
[e :U 29 ]
[; ;ProSwitch.c: 162: {
{
[; ;ProSwitch.c: 163: if (((dvalue * 2) - 1) >= 0)
"163
[e $ ! >= - * _dvalue -> -> 2 `i `d -> -> 1 `i `d -> -> 0 `i `d 32  ]
[; ;ProSwitch.c: 164: {
"164
{
[; ;ProSwitch.c: 165: if (kk < 8) sensor_result[1] += (int) pow(2, 8 - kk - 1);
"165
[e $ ! < -> _kk `i -> 8 `i 33  ]
[e =+ *U + &U _sensor_result * -> -> -> 1 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux -> -> ( _pow (2 , -> -> 2 `i `d -> - - -> 8 `i -> _kk `i -> 1 `i `d `i `uc ]
[e $U 34  ]
"166
[e :U 33 ]
[; ;ProSwitch.c: 166: else sensor_result[2] += (int) pow(2, 16 - kk - 1);
[e =+ *U + &U _sensor_result * -> -> -> 2 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux -> -> ( _pow (2 , -> -> 2 `i `d -> - - -> 16 `i -> _kk `i -> 1 `i `d `i `uc ]
[e :U 34 ]
[; ;ProSwitch.c: 167: dvalue = dvalue * 2 - 1;
"167
[e = _dvalue - * _dvalue -> -> 2 `i `d -> -> 1 `i `d ]
"168
}
[; ;ProSwitch.c: 168: } else
[e $U 35  ]
[e :U 32 ]
[; ;ProSwitch.c: 169: {
"169
{
[; ;ProSwitch.c: 170: dvalue = dvalue * 2;
"170
[e = _dvalue * _dvalue -> -> 2 `i `d ]
"171
}
[e :U 35 ]
"172
}
"161
[e ++ _kk -> -> 1 `i `uc ]
[e $ < -> _kk `i -> 16 `i 29  ]
[e :U 30 ]
"172
}
"174
}
[; ;ProSwitch.c: 171: }
[; ;ProSwitch.c: 172: }
[; ;ProSwitch.c: 174: } else
[e $U 36  ]
[e :U 25 ]
[; ;ProSwitch.c: 175: {
"175
{
"176
[v _radix `i ~T0 @X0 1 a ]
[; ;ProSwitch.c: 176: int radix = 0;
[e = _radix -> 0 `i ]
"177
[v _dtemp `d ~T0 @X0 1 a ]
[; ;ProSwitch.c: 177: double dtemp = dvalue;
[e = _dtemp _dvalue ]
[; ;ProSwitch.c: 178: while ((dtemp = dtemp * 2) < 1)
"178
[e $U 37  ]
[e :U 38 ]
[; ;ProSwitch.c: 179: {
"179
{
[; ;ProSwitch.c: 180: radix += 1;
"180
[e =+ _radix -> 1 `i ]
"181
}
[e :U 37 ]
"178
[e $ < = _dtemp * _dtemp -> -> 2 `i `d -> -> 1 `i `d 38  ]
[e :U 39 ]
[; ;ProSwitch.c: 181: }
[; ;ProSwitch.c: 182: dvalue = dvalue * pow(2, radix);
"182
[e = _dvalue * _dvalue ( _pow (2 , -> -> 2 `i `d -> _radix `d ]
[; ;ProSwitch.c: 183: if (radix > 0)
"183
[e $ ! > _radix -> 0 `i 40  ]
[; ;ProSwitch.c: 184: {
"184
{
[; ;ProSwitch.c: 185: radix = (radix ^ 0x3F) + 1;
"185
[e = _radix + ^ _radix -> 63 `i -> 1 `i ]
[; ;ProSwitch.c: 186: sensor_result[0] = sensor_result[0] + 0x40 + radix;
"186
[e = *U + &U _sensor_result * -> -> -> 0 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux -> + + -> *U + &U _sensor_result * -> -> -> 0 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux `i -> 64 `i _radix `uc ]
"187
}
[e :U 40 ]
[; ;ProSwitch.c: 187: }
[; ;ProSwitch.c: 189: for (kk = 0; kk < 16; kk++)
"189
{
[e = _kk -> -> 0 `i `uc ]
[e $ < -> _kk `i -> 16 `i 41  ]
[e $U 42  ]
"190
[e :U 41 ]
[; ;ProSwitch.c: 190: {
{
[; ;ProSwitch.c: 191: if (((dvalue * 2) - 1) >= 0)
"191
[e $ ! >= - * _dvalue -> -> 2 `i `d -> -> 1 `i `d -> -> 0 `i `d 44  ]
[; ;ProSwitch.c: 192: {
"192
{
[; ;ProSwitch.c: 193: if (kk < 8) sensor_result[1] += (int) pow(2, 8 - kk - 1);
"193
[e $ ! < -> _kk `i -> 8 `i 45  ]
[e =+ *U + &U _sensor_result * -> -> -> 1 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux -> -> ( _pow (2 , -> -> 2 `i `d -> - - -> 8 `i -> _kk `i -> 1 `i `d `i `uc ]
[e $U 46  ]
"194
[e :U 45 ]
[; ;ProSwitch.c: 194: else sensor_result[2] += (int) pow(2, 16 - kk - 1);
[e =+ *U + &U _sensor_result * -> -> -> 2 `i `ui `ux -> -> # *U &U _sensor_result `ui `ux -> -> ( _pow (2 , -> -> 2 `i `d -> - - -> 16 `i -> _kk `i -> 1 `i `d `i `uc ]
[e :U 46 ]
[; ;ProSwitch.c: 195: dvalue = dvalue * 2 - 1;
"195
[e = _dvalue - * _dvalue -> -> 2 `i `d -> -> 1 `i `d ]
"196
}
[; ;ProSwitch.c: 196: } else
[e $U 47  ]
[e :U 44 ]
[; ;ProSwitch.c: 197: {
"197
{
[; ;ProSwitch.c: 198: dvalue = dvalue * 2;
"198
[e = _dvalue * _dvalue -> -> 2 `i `d ]
"199
}
[e :U 47 ]
"200
}
"189
[e ++ _kk -> -> 1 `i `uc ]
[e $ < -> _kk `i -> 16 `i 41  ]
[e :U 42 ]
"200
}
"201
}
[e :U 36 ]
"202
}
[e :U 23 ]
[; ;ProSwitch.c: 199: }
[; ;ProSwitch.c: 200: }
[; ;ProSwitch.c: 201: }
[; ;ProSwitch.c: 202: }
[; ;ProSwitch.c: 204: }
"204
[e :UE 21 ]
}
"208
[v _AnswerInitUpLoad `(v ~T0 @X0 1 ef2`uc`uc ]
"209
{
[; ;ProSwitch.c: 208: void AnswerInitUpLoad(u8 type, u8 addr)
[; ;ProSwitch.c: 209: {
[e :U _AnswerInitUpLoad ]
"208
[v _type `uc ~T0 @X0 1 r1 ]
[v _addr `uc ~T0 @X0 1 r2 ]
"209
[f ]
"210
[v _AckCan `S5 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 210: CCan AckCan;
[; ;ProSwitch.c: 211: if (type == 0x0D || type == 0x12 || type == 0x11)
"211
[e $ ! || || == -> _type `i -> 13 `i == -> _type `i -> 18 `i == -> _type `i -> 17 `i 49  ]
[; ;ProSwitch.c: 212: LocalSensors[addr - 1].Delay = 6;
"212
[e = . *U + &U _LocalSensors * -> -> - -> _addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 11 -> -> 6 `i `uc ]
[e $U 50  ]
"213
[e :U 49 ]
[; ;ProSwitch.c: 213: else
[; ;ProSwitch.c: 214: LocalSensors[addr - 1].Delay = 0;
"214
[e = . *U + &U _LocalSensors * -> -> - -> _addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 11 -> -> 0 `i `uc ]
[e :U 50 ]
[; ;ProSwitch.c: 215: AckCan.ID = MakePekingCanId(0, type, addr, 0x00, 0x01);
"215
[e = . _AckCan 3 ( _MakePekingCanId (4 , , , , -> -> 0 `i `uc _type _addr -> -> 0 `i `uc -> -> 1 `i `uc ]
[; ;ProSwitch.c: 216: AckCan.Len = 0;
"216
[e = . _AckCan 2 -> -> 0 `i `uc ]
[; ;ProSwitch.c: 217: CanDownSend(AckCan);
"217
[e ( _CanDownSend (1 _AckCan ]
[; ;ProSwitch.c: 218: }
"218
[e :UE 48 ]
}
"222
[v _AnswerPowerUpLoad `(v ~T0 @X0 1 ef ]
"223
{
[; ;ProSwitch.c: 222: void AnswerPowerUpLoad(void)
[; ;ProSwitch.c: 223: {
[e :U _AnswerPowerUpLoad ]
[f ]
"224
[v _AckCan `S5 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 224: CCan AckCan;
[; ;ProSwitch.c: 225: AckCan.ID = MakePekingCanId(0, 0x28, 0, 0x00, 0x02);
"225
[e = . _AckCan 3 ( _MakePekingCanId (4 , , , , -> -> 0 `i `uc -> -> 40 `i `uc -> -> 0 `i `uc -> -> 0 `i `uc -> -> 2 `i `uc ]
[; ;ProSwitch.c: 226: AckCan.Len = 8;
"226
[e = . _AckCan 2 -> -> 8 `i `uc ]
[; ;ProSwitch.c: 227: CanDownSend(AckCan);
"227
[e ( _CanDownSend (1 _AckCan ]
[; ;ProSwitch.c: 228: }
"228
[e :UE 51 ]
}
"230
[v _GetUpLoadCanID `(ul ~T0 @X0 1 ef2`S1`uc ]
"231
{
[; ;ProSwitch.c: 230: u32 GetUpLoadCanID(_LocalSensor Sensor, u8 Cmd)
[; ;ProSwitch.c: 231: {
[e :U _GetUpLoadCanID ]
"230
[v _Sensor `S1 ~T0 @X0 1 r1 ]
[v _Cmd `uc ~T0 @X0 1 r2 ]
"231
[f ]
[; ;ProSwitch.c: 232: if ((Sensor.SensorFlag & 0x80))
"232
[e $ ! != & -> . _Sensor 1 `i -> 128 `i -> 0 `i 53  ]
[; ;ProSwitch.c: 233: return MakeFeimoCanId(0x00, Cmd, 0x01, 0x01, Sensor.Name, Sensor.Addr);
"233
[e ) ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc _Cmd -> -> 1 `i `uc -> -> 1 `i `uc . _Sensor 9 . _Sensor 8 ]
[e $UE 52  ]
[e $U 54  ]
"234
[e :U 53 ]
[; ;ProSwitch.c: 234: else
[; ;ProSwitch.c: 235: return MakeFeimoCanId(0x00, Cmd, 0x00, 0x01, Sensor.Name, Sensor.Addr);
"235
[e ) ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc _Cmd -> -> 0 `i `uc -> -> 1 `i `uc . _Sensor 9 . _Sensor 8 ]
[e $UE 52  ]
[e :U 54 ]
[; ;ProSwitch.c: 236: }
"236
[e :UE 52 ]
}
"238
[v _MakeUpLoadData `(ui ~T0 @X0 1 ef3`uc`uc`ui ]
"239
{
[; ;ProSwitch.c: 238: u16 MakeUpLoadData(u8 PointNum, u8 DataType, u16 Value)
[; ;ProSwitch.c: 239: {
[e :U _MakeUpLoadData ]
"238
[v _PointNum `uc ~T0 @X0 1 r1 ]
[v _DataType `uc ~T0 @X0 1 r2 ]
[v _Value `ui ~T0 @X0 1 r3 ]
"239
[f ]
"240
[v _UpLoadData `ui ~T0 @X0 1 a ]
[; ;ProSwitch.c: 240: u16 UpLoadData = 0;
[e = _UpLoadData -> -> 0 `i `ui ]
[; ;ProSwitch.c: 241: UpLoadData = ((Value > 0 ? 0x00 : 0x01) << 15);
"241
[e = _UpLoadData -> << ? > _Value -> -> 0 `i `ui : -> 0 `i -> 1 `i -> 15 `i `ui ]
[; ;ProSwitch.c: 242: UpLoadData <<= 2;
"242
[e =<< _UpLoadData -> 2 `i ]
[; ;ProSwitch.c: 243: UpLoadData += PointNum;
"243
[e =+ _UpLoadData -> _PointNum `ui ]
[; ;ProSwitch.c: 244: UpLoadData <<= 2;
"244
[e =<< _UpLoadData -> 2 `i ]
[; ;ProSwitch.c: 245: UpLoadData += DataType;
"245
[e =+ _UpLoadData -> _DataType `ui ]
[; ;ProSwitch.c: 246: UpLoadData <<= 11;
"246
[e =<< _UpLoadData -> 11 `i ]
[; ;ProSwitch.c: 247: UpLoadData += (Value & 0x07FF);
"247
[e =+ _UpLoadData & _Value -> -> 2047 `i `ui ]
[; ;ProSwitch.c: 248: return UpLoadData;
"248
[e ) _UpLoadData ]
[e $UE 55  ]
[; ;ProSwitch.c: 249: }
"249
[e :UE 55 ]
}
"251
[v _CanIdSwitch `(ul ~T0 @X0 1 ef2`ul`uc ]
"252
{
[; ;ProSwitch.c: 251: u32 CanIdSwitch(u32 CanId, u8 SwitchDir)
[; ;ProSwitch.c: 252: {
[e :U _CanIdSwitch ]
"251
[v _CanId `ul ~T0 @X0 1 r1 ]
[v _SwitchDir `uc ~T0 @X0 1 r2 ]
"252
[f ]
"253
[v _CanID `ul ~T0 @X0 1 a ]
[; ;ProSwitch.c: 253: u32 CanID = 0;
[e = _CanID -> -> -> 0 `i `l `ul ]
[; ;ProSwitch.c: 254: switch (SwitchDir)
"254
[e $U 58  ]
[; ;ProSwitch.c: 255: {
"255
{
[; ;ProSwitch.c: 256: case 0x00:
"256
[e :U 59 ]
[; ;ProSwitch.c: 257: break;
"257
[e $U 57  ]
[; ;ProSwitch.c: 258: case 0x01:
"258
[e :U 60 ]
[; ;ProSwitch.c: 259: CanID = ((CanId & 0x000007FF) << 18);
"259
[e = _CanID << & _CanId -> -> -> 2047 `i `l `ul -> 18 `i ]
[; ;ProSwitch.c: 260: CanID |= ((CanId & 0x7FFFF800) >> 11);
"260
[e =| _CanID >> & _CanId -> -> 2147481600 `l `ul -> 11 `i ]
[; ;ProSwitch.c: 261: break;
"261
[e $U 57  ]
"262
}
[; ;ProSwitch.c: 262: }
[e $U 57  ]
"254
[e :U 58 ]
[e [\ _SwitchDir , $ -> -> 0 `i `uc 59
 , $ -> -> 1 `i `uc 60
 57 ]
"262
[e :U 57 ]
[; ;ProSwitch.c: 263: return CanID;
"263
[e ) _CanID ]
[e $UE 56  ]
[; ;ProSwitch.c: 264: }
"264
[e :UE 56 ]
}
"271
[v _CanProSwitch `(v ~T0 @X0 1 ef1`S5 ]
"272
{
[; ;ProSwitch.c: 271: void CanProSwitch(CCan Can_Peking)
[; ;ProSwitch.c: 272: {
[e :U _CanProSwitch ]
"271
[v _Can_Peking `S5 ~T0 @X0 1 r1 ]
"272
[f ]
"273
[v _Can_Feimo `S5 ~T0 @X0 1 a ]
"274
[v _addr `uc ~T0 @X0 1 a ]
[v _sensorType `uc ~T0 @X0 1 a ]
[v _cmd `uc ~T0 @X0 1 a ]
"275
[v _CanData `ui ~T0 @X0 1 a ]
[; ;ProSwitch.c: 273: CCan Can_Feimo;
[; ;ProSwitch.c: 274: u8 addr, sensorType, cmd;
[; ;ProSwitch.c: 275: u16 CanData = 0;
[e = _CanData -> -> 0 `i `ui ]
"276
[v _value `ui ~T0 @X0 1 a ]
"277
[v _i `f ~T0 @X0 1 a ]
[v _j `f ~T0 @X0 1 a ]
[v _k `f ~T0 @X0 1 a ]
"278
[v _UploadSensor `*S1 ~T0 @X0 1 a ]
"279
[v _Breaker `*S3 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 276: u16 value;
[; ;ProSwitch.c: 277: float i, j, k;
[; ;ProSwitch.c: 278: _LocalSensor* UploadSensor;
[; ;ProSwitch.c: 279: _Breaker* Breaker;
[; ;ProSwitch.c: 281: TimeChange();
"281
[e ( _TimeChange ..  ]
[; ;ProSwitch.c: 282: Can_Feimo.ID = 0;
"282
[e = . _Can_Feimo 3 -> -> -> 0 `i `l `ul ]
[; ;ProSwitch.c: 283: Can_Feimo.Len = 0;
"283
[e = . _Can_Feimo 2 -> -> 0 `i `uc ]
[; ;ProSwitch.c: 284: Can_Peking.ID = CanIdSwitch(Can_Peking.ID, 0x01);
"284
[e = . _Can_Peking 3 ( _CanIdSwitch (2 , . _Can_Peking 3 -> -> 1 `i `uc ]
[; ;ProSwitch.c: 285: cmd = Can_Peking.ID & 0x1F;
"285
[e = _cmd -> & . _Can_Peking 3 -> -> -> 31 `i `l `ul `uc ]
[; ;ProSwitch.c: 286: addr = Can_Peking.Buf[0];
"286
[e = _addr *U + &U . _Can_Peking 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux ]
[; ;ProSwitch.c: 287: sensorType = (Can_Peking.ID >> 20) & 0x3F;
"287
[e = _sensorType -> & >> . _Can_Peking 3 -> 20 `i -> -> -> 63 `i `l `ul `uc ]
[; ;ProSwitch.c: 288: if (sensorType == 0x28)
"288
[e $ ! == -> _sensorType `i -> 40 `i 62  ]
[; ;ProSwitch.c: 289: {
"289
{
[; ;ProSwitch.c: 290: addr = ((Can_Peking.ID >> 13)&0x7F);
"290
[e = _addr -> & >> . _Can_Peking 3 -> 13 `i -> -> -> 127 `i `l `ul `uc ]
[; ;ProSwitch.c: 291: UploadSensor = &LocalSensors[15];
"291
[e = _UploadSensor &U *U + &U _LocalSensors * -> -> -> 15 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux ]
[; ;ProSwitch.c: 292: UploadSensor->Addr = addr + Sys.AddrOffset + 16;
"292
[e = . *U _UploadSensor 8 -> + + -> _addr `i -> . _Sys 1 `i -> 16 `i `uc ]
[; ;ProSwitch.c: 293: UploadSensor->Tick = SYS_TICK_1S;
"293
[e = . *U _UploadSensor 14 _SYS_TICK_1S ]
[; ;ProSwitch.c: 294: UploadSensor->SensorFlag &= ~0x01;
"294
[e =& . *U _UploadSensor 1 -> ~ -> 1 `i `uc ]
[; ;ProSwitch.c: 295: UploadSensor->CtrFlag &= ~0x10;
"295
[e =& . *U _UploadSensor 10 -> ~ -> 16 `i `uc ]
[; ;ProSwitch.c: 296: UploadSensor->Name = SenserSwitch_B2F[sensorType];
"296
[e = . *U _UploadSensor 9 *U + &U _SenserSwitch_B2F * -> _sensorType `ux -> -> # *U &U _SenserSwitch_B2F `ui `ux ]
[; ;ProSwitch.c: 297: if (cmd == 0x01)
"297
[e $ ! == -> _cmd `i -> 1 `i 63  ]
[; ;ProSwitch.c: 298: {
"298
{
[; ;ProSwitch.c: 299: AnswerInitUpLoad(0x28, 0);
"299
[e ( _AnswerInitUpLoad (2 , -> -> 40 `i `uc -> -> 0 `i `uc ]
[; ;ProSwitch.c: 300: return;
"300
[e $UE 61  ]
"301
}
[e :U 63 ]
[; ;ProSwitch.c: 301: }
[; ;ProSwitch.c: 302: if (Can_Peking.ID == 0x02801002)
"302
[e $ ! == . _Can_Peking 3 -> -> 41947138 `l `ul 64  ]
[; ;ProSwitch.c: 303: AnswerPowerUpLoad();
"303
[e ( _AnswerPowerUpLoad ..  ]
[e :U 64 ]
[; ;ProSwitch.c: 304: PowerDataDeal(Can_Peking);
"304
[e ( _PowerDataDeal (1 _Can_Peking ]
[; ;ProSwitch.c: 305: return;
"305
[e $UE 61  ]
"306
}
[e :U 62 ]
[; ;ProSwitch.c: 306: }
[; ;ProSwitch.c: 307: if (sensorType != 0x0F)
"307
[e $ ! != -> _sensorType `i -> 15 `i 65  ]
[; ;ProSwitch.c: 308: {
"308
{
[; ;ProSwitch.c: 309: UploadSensor = &LocalSensors[addr - 1];
"309
[e = _UploadSensor &U *U + &U _LocalSensors * -> -> - -> _addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux ]
[; ;ProSwitch.c: 310: UploadSensor->Addr = addr + Sys.AddrOffset;
"310
[e = . *U _UploadSensor 8 -> + -> _addr `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 311: UploadSensor->Tick = SYS_TICK;
"311
[e = . *U _UploadSensor 14 _SYS_TICK ]
[; ;ProSwitch.c: 312: UploadSensor->SensorFlag &= ~0x01;
"312
[e =& . *U _UploadSensor 1 -> ~ -> 1 `i `uc ]
[; ;ProSwitch.c: 313: UploadSensor->CtrFlag &= ~0x10;
"313
[e =& . *U _UploadSensor 10 -> ~ -> 16 `i `uc ]
[; ;ProSwitch.c: 314: UploadSensor->Name = SenserSwitch_B2F[sensorType];
"314
[e = . *U _UploadSensor 9 *U + &U _SenserSwitch_B2F * -> _sensorType `ux -> -> # *U &U _SenserSwitch_B2F `ui `ux ]
[; ;ProSwitch.c: 315: if (UploadSensor->Delay)
"315
[e $ ! != -> . *U _UploadSensor 11 `i -> -> -> 0 `i `uc `i 66  ]
[; ;ProSwitch.c: 316: UploadSensor->Delay--;
"316
[e -- . *U _UploadSensor 11 -> -> 1 `i `uc ]
[e :U 66 ]
"317
}
[e :U 65 ]
[; ;ProSwitch.c: 317: }
[; ;ProSwitch.c: 318: switch (cmd)
"318
[e $U 68  ]
[; ;ProSwitch.c: 319: {
"319
{
[; ;ProSwitch.c: 320: case 0x02:
"320
[e :U 69 ]
[; ;ProSwitch.c: 321: if (sensorType == 0x0D || sensorType == 0x12 || sensorType == 0x11)
"321
[e $ ! || || == -> _sensorType `i -> 13 `i == -> _sensorType `i -> 18 `i == -> _sensorType `i -> 17 `i 70  ]
[; ;ProSwitch.c: 322: {
"322
{
[; ;ProSwitch.c: 323: UploadSensor->SensorFlag |= 0x40;
"323
[e =| . *U _UploadSensor 1 -> -> 64 `i `uc ]
[; ;ProSwitch.c: 325: if (UploadSensor->Delay)
"325
[e $ ! != -> . *U _UploadSensor 11 `i -> -> -> 0 `i `uc `i 71  ]
[; ;ProSwitch.c: 326: return;
"326
[e $UE 61  ]
[e :U 71 ]
[; ;ProSwitch.c: 327: Can_Feimo.ID = GetUpLoadCanID(LocalSensors[addr - 1], 0x03);
"327
[e = . _Can_Feimo 3 ( _GetUpLoadCanID (2 , *U + &U _LocalSensors * -> -> - -> _addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux -> -> 3 `i `uc ]
[; ;ProSwitch.c: 328: if (BufCompare(&Can_Peking.Buf[2], senserState1, 3))
"328
[e $ ! != -> ( _BufCompare (3 , , &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux &U _senserState1 -> -> 3 `i `uc `i -> -> -> 0 `i `uc `i 72  ]
[; ;ProSwitch.c: 329: {
"329
{
[; ;ProSwitch.c: 330: Can_Feimo.Buf[0] = 0x00;
"330
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 331: Can_Feimo.Buf[1] = 0x01;
"331
[e = *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 1 `i `uc ]
[; ;ProSwitch.c: 332: CanData = 0x0001;
"332
[e = _CanData -> -> 1 `i `ui ]
"333
}
[; ;ProSwitch.c: 333: } else
[e $U 73  ]
[e :U 72 ]
[; ;ProSwitch.c: 334: {
"334
{
[; ;ProSwitch.c: 335: Can_Feimo.Buf[0] = 0x00;
"335
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 336: Can_Feimo.Buf[1] = 0x00;
"336
[e = *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 337: CanData = 0x0000;
"337
[e = _CanData -> -> 0 `i `ui ]
"338
}
[e :U 73 ]
[; ;ProSwitch.c: 338: }
[; ;ProSwitch.c: 339: Can_Feimo.Buf[2] = UploadSensor->Crc;
"339
[e = *U + &U . _Can_Feimo 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux . *U _UploadSensor 0 ]
[; ;ProSwitch.c: 340: Can_Feimo.Len = 3;
"340
[e = . _Can_Feimo 2 -> -> 3 `i `uc ]
"341
}
[; ;ProSwitch.c: 341: }
[e $U 74  ]
"342
[e :U 70 ]
[; ;ProSwitch.c: 342: else if (sensorType == 0x0E)
[e $ ! == -> _sensorType `i -> 14 `i 75  ]
[; ;ProSwitch.c: 343: {
"343
{
[; ;ProSwitch.c: 344: UploadSensor->SensorFlag |= 0x40;
"344
[e =| . *U _UploadSensor 1 -> -> 64 `i `uc ]
[; ;ProSwitch.c: 345: Can_Feimo.ID = GetUpLoadCanID(*UploadSensor, 0x03);
"345
[e = . _Can_Feimo 3 ( _GetUpLoadCanID (2 , *U _UploadSensor -> -> 3 `i `uc ]
[; ;ProSwitch.c: 346: if (BufCompare(&Can_Peking.Buf[2], senserState1, 3))
"346
[e $ ! != -> ( _BufCompare (3 , , &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux &U _senserState1 -> -> 3 `i `uc `i -> -> -> 0 `i `uc `i 76  ]
[; ;ProSwitch.c: 347: {
"347
{
[; ;ProSwitch.c: 348: Can_Feimo.Buf[0] = 0x00;
"348
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 349: Can_Feimo.Buf[1] = 0x01;
"349
[e = *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 1 `i `uc ]
"350
}
[; ;ProSwitch.c: 350: } else if (BufCompare(&Can_Peking.Buf[2], senserState2, 3))
[e $U 77  ]
[e :U 76 ]
[e $ ! != -> ( _BufCompare (3 , , &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux &U _senserState2 -> -> 3 `i `uc `i -> -> -> 0 `i `uc `i 78  ]
[; ;ProSwitch.c: 351: {
"351
{
[; ;ProSwitch.c: 352: Can_Feimo.Buf[0] = 0x00;
"352
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 353: Can_Feimo.Buf[1] = 0x00;
"353
[e = *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 0 `i `uc ]
"354
}
[; ;ProSwitch.c: 354: } else if (BufCompare(&Can_Peking.Buf[2], senserState3, 3))
[e $U 79  ]
[e :U 78 ]
[e $ ! != -> ( _BufCompare (3 , , &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux &U _senserState3 -> -> 3 `i `uc `i -> -> -> 0 `i `uc `i 80  ]
[; ;ProSwitch.c: 355: {
"355
{
[; ;ProSwitch.c: 356: Can_Feimo.Buf[0] = 0x00;
"356
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 357: Can_Feimo.Buf[1] = 0x02;
"357
[e = *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 2 `i `uc ]
"358
}
[e :U 80 ]
"359
[e :U 79 ]
[e :U 77 ]
[; ;ProSwitch.c: 358: }
[; ;ProSwitch.c: 359: CanData = 0x0000 | Can_Feimo.Buf[1];
[e = _CanData -> | -> 0 `i -> *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux `i `ui ]
[; ;ProSwitch.c: 361: Can_Feimo.Buf[2] = UploadSensor->Crc;
"361
[e = *U + &U . _Can_Feimo 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux . *U _UploadSensor 0 ]
[; ;ProSwitch.c: 362: Can_Feimo.Len = 3;
"362
[e = . _Can_Feimo 2 -> -> 3 `i `uc ]
"363
}
[; ;ProSwitch.c: 363: } else if (sensorType == 0x0F)
[e $U 81  ]
[e :U 75 ]
[e $ ! == -> _sensorType `i -> 15 `i 82  ]
[; ;ProSwitch.c: 364: {
"364
{
[; ;ProSwitch.c: 365: Breaker->Flag &= ~0x02;
"365
[e =& . *U _Breaker 17 -> ~ -> 2 `i `uc ]
[; ;ProSwitch.c: 366: Breaker = FilterBreaker(addr + Sys.AddrOffset);
"366
[e = _Breaker ( _FilterBreaker (1 -> + -> _addr `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 367: if (Breaker->Addr != 0xFF)
"367
[e $ ! != -> . *U _Breaker 0 `i -> 255 `i 83  ]
[; ;ProSwitch.c: 368: {
"368
{
[; ;ProSwitch.c: 369: Breaker->Addr = addr + Sys.AddrOffset;
"369
[e = . *U _Breaker 0 -> + -> _addr `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 370: Breaker->Tick = SYS_TICK;
"370
[e = . *U _Breaker 14 _SYS_TICK ]
[; ;ProSwitch.c: 371: Can_Feimo.ID = MakeFeimoCanId(0x00, 0x09, 0x00, 0x01, 0x1F, Breaker->Addr);
"371
[e = . _Can_Feimo 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 9 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc -> -> 31 `i `uc . *U _Breaker 0 ]
[; ;ProSwitch.c: 372: if (BufCompare(&Can_Peking.Buf[2], senserState1, 3))
"372
[e $ ! != -> ( _BufCompare (3 , , &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux &U _senserState1 -> -> 3 `i `uc `i -> -> -> 0 `i `uc `i 84  ]
[; ;ProSwitch.c: 373: {
"373
{
[; ;ProSwitch.c: 374: Can_Feimo.Buf[0] = 0x03;
"374
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 3 `i `uc ]
[; ;ProSwitch.c: 375: CanData = 0x0003;
"375
[e = _CanData -> -> 3 `i `ui ]
[; ;ProSwitch.c: 376: Breaker->Flag |= 0x01;
"376
[e =| . *U _Breaker 17 -> -> 1 `i `uc ]
"377
}
[; ;ProSwitch.c: 377: } else if (BufCompare(&Can_Peking.Buf[2], senserState2, 3))
[e $U 85  ]
[e :U 84 ]
[e $ ! != -> ( _BufCompare (3 , , &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux &U _senserState2 -> -> 3 `i `uc `i -> -> -> 0 `i `uc `i 86  ]
[; ;ProSwitch.c: 378: {
"378
{
[; ;ProSwitch.c: 379: Can_Feimo.Buf[0] = 0x00;
"379
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 380: CanData = 0x0000;
"380
[e = _CanData -> -> 0 `i `ui ]
[; ;ProSwitch.c: 381: Breaker->Flag &= ~0x01;
"381
[e =& . *U _Breaker 17 -> ~ -> 1 `i `uc ]
"382
}
[; ;ProSwitch.c: 382: } else if (BufCompare(&Can_Peking.Buf[2], senserState3, 3))
[e $U 87  ]
[e :U 86 ]
[e $ ! != -> ( _BufCompare (3 , , &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux &U _senserState3 -> -> 3 `i `uc `i -> -> -> 0 `i `uc `i 88  ]
[; ;ProSwitch.c: 383: {
"383
{
[; ;ProSwitch.c: 384: Can_Feimo.Buf[0] = 0x01;
"384
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 1 `i `uc ]
[; ;ProSwitch.c: 385: CanData = 0x0001;
"385
[e = _CanData -> -> 1 `i `ui ]
[; ;ProSwitch.c: 386: Breaker->Flag |= 0x01;
"386
[e =| . *U _Breaker 17 -> -> 1 `i `uc ]
"387
}
[; ;ProSwitch.c: 387: } else if (BufCompare(&Can_Peking.Buf[2], senserState4, 3))
[e $U 89  ]
[e :U 88 ]
[e $ ! != -> ( _BufCompare (3 , , &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux &U _senserState4 -> -> 3 `i `uc `i -> -> -> 0 `i `uc `i 90  ]
[; ;ProSwitch.c: 388: {
"388
{
[; ;ProSwitch.c: 389: Can_Feimo.Buf[0] = 0x02;
"389
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 2 `i `uc ]
[; ;ProSwitch.c: 390: CanData = 0x0002;
"390
[e = _CanData -> -> 2 `i `ui ]
[; ;ProSwitch.c: 391: Breaker->Flag &= ~0x01;
"391
[e =& . *U _Breaker 17 -> ~ -> 1 `i `uc ]
"392
}
[e :U 90 ]
"393
[e :U 89 ]
[e :U 87 ]
[e :U 85 ]
[; ;ProSwitch.c: 392: }
[; ;ProSwitch.c: 393: if (Breaker->ForceControlFlag)
[e $ ! != -> . *U _Breaker 2 `i -> -> -> 0 `i `uc `i 91  ]
[; ;ProSwitch.c: 394: Can.Buf[0] |= (1 << 2);
"394
[e =| *U + &U . _Can 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can 1 `ui `ux -> << -> 1 `i -> 2 `i `uc ]
[e :U 91 ]
[; ;ProSwitch.c: 395: if (Breaker->CrossControlFlag)
"395
[e $ ! != -> . *U _Breaker 4 `i -> -> -> 0 `i `uc `i 92  ]
[; ;ProSwitch.c: 396: Can.Buf[0] |= (1 << 3);
"396
[e =| *U + &U . _Can 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can 1 `ui `ux -> << -> 1 `i -> 3 `i `uc ]
[e :U 92 ]
[; ;ProSwitch.c: 397: Can_Feimo.Buf[1] = 0;
"397
[e = *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 398: Can_Feimo.Buf[2] = timeHex;
"398
[e = *U + &U . _Can_Feimo 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> _timeHex `uc ]
[; ;ProSwitch.c: 399: Can_Feimo.Buf[3] = timeHex >> 8;
"399
[e = *U + &U . _Can_Feimo 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 8 `i `uc ]
[; ;ProSwitch.c: 400: Can_Feimo.Buf[4] = timeHex >> 16;
"400
[e = *U + &U . _Can_Feimo 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 16 `i `uc ]
[; ;ProSwitch.c: 401: Can_Feimo.Buf[5] = timeHex >> 24;
"401
[e = *U + &U . _Can_Feimo 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 24 `i `uc ]
[; ;ProSwitch.c: 402: Can_Feimo.Buf[6] = Breaker->Crc;
"402
[e = *U + &U . _Can_Feimo 1 * -> -> -> 6 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux . *U _Breaker 1 ]
[; ;ProSwitch.c: 403: Can_Feimo.Len = 7;
"403
[e = . _Can_Feimo 2 -> -> 7 `i `uc ]
[; ;ProSwitch.c: 404: if (Breaker->Addr != 0)
"404
[e $ ! != -> . *U _Breaker 0 `i -> 0 `i 93  ]
[; ;ProSwitch.c: 405: {
"405
{
[; ;ProSwitch.c: 406: if (Breaker->CurValue != CanData)
"406
[e $ ! != . *U _Breaker 20 _CanData 94  ]
[; ;ProSwitch.c: 407: {
"407
{
[; ;ProSwitch.c: 408: Breaker->CurValue = CanData;
"408
[e = . *U _Breaker 20 _CanData ]
[; ;ProSwitch.c: 409: CanUpSend(Can_Feimo);
"409
[e ( _CanUpSend (1 _Can_Feimo ]
[; ;ProSwitch.c: 410: Breaker->UpLoadTick = SYS_TICK;
"410
[e = . *U _Breaker 15 _SYS_TICK ]
"411
}
[e :U 94 ]
"412
}
[e :U 93 ]
[; ;ProSwitch.c: 411: }
[; ;ProSwitch.c: 412: }
[; ;ProSwitch.c: 413: break;
"413
[e $U 67  ]
"414
}
[e :U 83 ]
"415
}
[; ;ProSwitch.c: 414: }
[; ;ProSwitch.c: 415: } else
[e $U 95  ]
[e :U 82 ]
[; ;ProSwitch.c: 416: {
"416
{
[; ;ProSwitch.c: 417: UploadSensor->SensorFlag &= (~0x40);
"417
[e =& . *U _UploadSensor 1 -> ~ -> 64 `i `uc ]
[; ;ProSwitch.c: 418: Can_Feimo.ID = GetUpLoadCanID(*UploadSensor, 0x01);
"418
[e = . _Can_Feimo 3 ( _GetUpLoadCanID (2 , *U _UploadSensor -> -> 1 `i `uc ]
[; ;ProSwitch.c: 419: if (sensorType == 0x07 || sensorType == 0x05 || sensorType == 0x0B || sensorType == 0x2B)
"419
[e $ ! || || || == -> _sensorType `i -> 7 `i == -> _sensorType `i -> 5 `i == -> _sensorType `i -> 11 `i == -> _sensorType `i -> 43 `i 96  ]
[; ;ProSwitch.c: 420: {
"420
{
[; ;ProSwitch.c: 421: value = (u16) (ConverToByeFloat(&Can_Peking.Buf[2])*100);
"421
[e = _value -> * ( _ConverToByeFloat (1 &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux -> -> 100 `i `d `ui ]
[; ;ProSwitch.c: 422: CanData = MakeUpLoadData(0x02, 0x00, value);
"422
[e = _CanData ( _MakeUpLoadData (3 , , -> -> 2 `i `uc -> -> 0 `i `uc _value ]
[; ;ProSwitch.c: 423: i = CanData & 0x0FFF;
"423
[e = _i -> & _CanData -> -> 4095 `i `ui `f ]
[; ;ProSwitch.c: 424: i /= GetChuShu((CanData >> 13) & 0x03);
"424
[e =/ _i -> ( _GetChuShu (1 -> & >> _CanData -> 13 `i -> -> 3 `i `ui `uc `f ]
[; ;ProSwitch.c: 425: if ((UploadSensor->SensorFlag & 0x80) && UploadSensor->UpDuanDian != 0xFFFF)
"425
[e $ ! && != & -> . *U _UploadSensor 1 `i -> 128 `i -> 0 `i != . *U _UploadSensor 3 -> 65535 `ui 97  ]
[; ;ProSwitch.c: 426: {
"426
{
[; ;ProSwitch.c: 427: j = UploadSensor->UpDuanDian & 0x0FFF;
"427
[e = _j -> & . *U _UploadSensor 3 -> -> 4095 `i `ui `f ]
[; ;ProSwitch.c: 428: j /= GetChuShu((UploadSensor->UpDuanDian >> 13) & 0x03);
"428
[e =/ _j -> ( _GetChuShu (1 -> & >> . *U _UploadSensor 3 -> 13 `i -> -> 3 `i `ui `uc `f ]
[; ;ProSwitch.c: 429: if (i >= j)
"429
[e $ ! >= _i _j 98  ]
[; ;ProSwitch.c: 430: {
"430
{
[; ;ProSwitch.c: 431: Can_Feimo.ID |= 0x01000000;
"431
[e =| . _Can_Feimo 3 -> -> 16777216 `l `ul ]
[; ;ProSwitch.c: 432: UploadSensor->CtrFlag |= 0x01;
"432
[e =| . *U _UploadSensor 10 -> -> 1 `i `uc ]
"433
}
[e :U 98 ]
[; ;ProSwitch.c: 433: }
[; ;ProSwitch.c: 434: k = UploadSensor->UpFuDian & 0x0FFF;
"434
[e = _k -> & . *U _UploadSensor 4 -> -> 4095 `i `ui `f ]
[; ;ProSwitch.c: 435: k /= GetChuShu((UploadSensor->UpFuDian >> 13)&0x03);
"435
[e =/ _k -> ( _GetChuShu (1 -> & >> . *U _UploadSensor 4 -> 13 `i -> -> 3 `i `ui `uc `f ]
[; ;ProSwitch.c: 436: if (i < k)
"436
[e $ ! < _i _k 99  ]
[; ;ProSwitch.c: 437: UploadSensor->CtrFlag &= ~0x01;
"437
[e =& . *U _UploadSensor 10 -> ~ -> 1 `i `uc ]
[e :U 99 ]
"438
}
[e :U 97 ]
[; ;ProSwitch.c: 438: }
[; ;ProSwitch.c: 440: if(UploadSensor->SensorFlag & 0x02)
"440
[e $ ! != & -> . *U _UploadSensor 1 `i -> 2 `i -> 0 `i 100  ]
[; ;ProSwitch.c: 441: {
"441
{
[; ;ProSwitch.c: 442: if(value >= 300)
"442
[e $ ! >= _value -> -> 300 `i `ui 101  ]
[; ;ProSwitch.c: 443: {
"443
{
[; ;ProSwitch.c: 444: UploadSensor->CtrFlag |= 0x02;
"444
[e =| . *U _UploadSensor 10 -> -> 2 `i `uc ]
"445
}
[e :U 101 ]
[; ;ProSwitch.c: 445: }
[; ;ProSwitch.c: 446: if(value < 150)
"446
[e $ ! < _value -> -> 150 `i `ui 102  ]
[; ;ProSwitch.c: 447: {
"447
{
[; ;ProSwitch.c: 448: UploadSensor->CtrFlag &= ~(0x02);
"448
[e =& . *U _UploadSensor 10 -> ~ -> 2 `i `uc ]
"449
}
[e :U 102 ]
"450
}
[e :U 100 ]
"451
}
[; ;ProSwitch.c: 449: }
[; ;ProSwitch.c: 450: }
[; ;ProSwitch.c: 451: }
[e $U 103  ]
"452
[e :U 96 ]
[; ;ProSwitch.c: 452: else
[; ;ProSwitch.c: 453: {
"453
{
[; ;ProSwitch.c: 454: value = (u16) (ConverToByeFloat(&Can_Peking.Buf[2]) * 10);
"454
[e = _value -> * ( _ConverToByeFloat (1 &U *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux -> -> 10 `i `d `ui ]
[; ;ProSwitch.c: 455: CanData = MakeUpLoadData(0x01, 0x00, value);
"455
[e = _CanData ( _MakeUpLoadData (3 , , -> -> 1 `i `uc -> -> 0 `i `uc _value ]
[; ;ProSwitch.c: 456: if ((UploadSensor->SensorFlag & 0x80) && UploadSensor->UpDuanDian != 0xFFFF)
"456
[e $ ! && != & -> . *U _UploadSensor 1 `i -> 128 `i -> 0 `i != . *U _UploadSensor 3 -> 65535 `ui 104  ]
[; ;ProSwitch.c: 457: {
"457
{
[; ;ProSwitch.c: 458: i = CanData & 0x0FFF;
"458
[e = _i -> & _CanData -> -> 4095 `i `ui `f ]
[; ;ProSwitch.c: 459: i /= GetChuShu((CanData >> 13) & 0x03);
"459
[e =/ _i -> ( _GetChuShu (1 -> & >> _CanData -> 13 `i -> -> 3 `i `ui `uc `f ]
[; ;ProSwitch.c: 460: j = (UploadSensor->UpDuanDian & 0x0FFF);
"460
[e = _j -> & . *U _UploadSensor 3 -> -> 4095 `i `ui `f ]
[; ;ProSwitch.c: 461: j /= GetChuShu((UploadSensor->UpDuanDian >> 13) & 0x03);
"461
[e =/ _j -> ( _GetChuShu (1 -> & >> . *U _UploadSensor 3 -> 13 `i -> -> 3 `i `ui `uc `f ]
[; ;ProSwitch.c: 462: if (i >= j)
"462
[e $ ! >= _i _j 105  ]
[; ;ProSwitch.c: 463: {
"463
{
[; ;ProSwitch.c: 464: Can_Feimo.ID |= 0x01000000;
"464
[e =| . _Can_Feimo 3 -> -> 16777216 `l `ul ]
[; ;ProSwitch.c: 465: UploadSensor->CtrFlag |= 0x01;
"465
[e =| . *U _UploadSensor 10 -> -> 1 `i `uc ]
"466
}
[e :U 105 ]
[; ;ProSwitch.c: 466: }
[; ;ProSwitch.c: 467: k = UploadSensor->UpFuDian & 0x0FFF;
"467
[e = _k -> & . *U _UploadSensor 4 -> -> 4095 `i `ui `f ]
[; ;ProSwitch.c: 468: k /= GetChuShu((UploadSensor->UpFuDian >> 13) & 0x03);
"468
[e =/ _k -> ( _GetChuShu (1 -> & >> . *U _UploadSensor 4 -> 13 `i -> -> 3 `i `ui `uc `f ]
[; ;ProSwitch.c: 469: if (i < k)
"469
[e $ ! < _i _k 106  ]
[; ;ProSwitch.c: 470: UploadSensor->CtrFlag &= ~0x01;
"470
[e =& . *U _UploadSensor 10 -> ~ -> 1 `i `uc ]
[e :U 106 ]
"471
}
[e :U 104 ]
"472
}
[e :U 103 ]
[; ;ProSwitch.c: 471: }
[; ;ProSwitch.c: 472: }
[; ;ProSwitch.c: 473: Can_Feimo.Buf[0] = CanData;
"473
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> _CanData `uc ]
[; ;ProSwitch.c: 474: Can_Feimo.Buf[1] = CanData >> 8;
"474
[e = *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _CanData -> 8 `i `uc ]
[; ;ProSwitch.c: 475: Can_Feimo.Buf[2] = timeHex;
"475
[e = *U + &U . _Can_Feimo 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> _timeHex `uc ]
[; ;ProSwitch.c: 476: Can_Feimo.Buf[3] = timeHex >> 8;
"476
[e = *U + &U . _Can_Feimo 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 8 `i `uc ]
[; ;ProSwitch.c: 477: Can_Feimo.Buf[4] = timeHex >> 16;
"477
[e = *U + &U . _Can_Feimo 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 16 `i `uc ]
[; ;ProSwitch.c: 478: Can_Feimo.Buf[5] = timeHex >> 24;
"478
[e = *U + &U . _Can_Feimo 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 24 `i `uc ]
[; ;ProSwitch.c: 479: Can_Feimo.Buf[6] = UploadSensor->Crc;
"479
[e = *U + &U . _Can_Feimo 1 * -> -> -> 6 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux . *U _UploadSensor 0 ]
[; ;ProSwitch.c: 480: Can_Feimo.Len = 7;
"480
[e = . _Can_Feimo 2 -> -> 7 `i `uc ]
"481
}
[e :U 95 ]
[e :U 81 ]
[e :U 74 ]
[; ;ProSwitch.c: 481: }
[; ;ProSwitch.c: 482: if(Can_Peking.Buf[1] == 0x06)
"482
[e $ ! == -> *U + &U . _Can_Peking 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux `i -> 6 `i 107  ]
[; ;ProSwitch.c: 483: {
"483
{
[; ;ProSwitch.c: 484: CanData &= ~(0x1800);
"484
[e =& _CanData -> ~ -> 6144 `i `ui ]
[; ;ProSwitch.c: 485: CanData |= 0x1000;
"485
[e =| _CanData -> -> 4096 `i `ui ]
"486
}
[e :U 107 ]
[; ;ProSwitch.c: 486: }
[; ;ProSwitch.c: 488: if (UploadSensor->CurValue != CanData)
"488
[e $ ! != . *U _UploadSensor 13 _CanData 108  ]
[; ;ProSwitch.c: 489: {
"489
{
[; ;ProSwitch.c: 490: if (!UploadSensor->Delay)
"490
[e $ ! ! != -> . *U _UploadSensor 11 `i -> -> -> 0 `i `uc `i 109  ]
[; ;ProSwitch.c: 491: {
"491
{
[; ;ProSwitch.c: 492: UploadSensor->CurValue = CanData;
"492
[e = . *U _UploadSensor 13 _CanData ]
[; ;ProSwitch.c: 493: CanUpSend(Can_Feimo);
"493
[e ( _CanUpSend (1 _Can_Feimo ]
[; ;ProSwitch.c: 494: UploadSensor->UpLoadTick = SYS_TICK;
"494
[e = . *U _UploadSensor 15 _SYS_TICK ]
"495
}
[e :U 109 ]
"496
}
[e :U 108 ]
[; ;ProSwitch.c: 495: }
[; ;ProSwitch.c: 496: }
[; ;ProSwitch.c: 497: break;
"497
[e $U 67  ]
[; ;ProSwitch.c: 499: case 0x01:
"499
[e :U 110 ]
[; ;ProSwitch.c: 500: if (sensorType != 0x0F)
"500
[e $ ! != -> _sensorType `i -> 15 `i 111  ]
[; ;ProSwitch.c: 501: AnswerInitUpLoad(SenserSwitch_F2B[UploadSensor->Name], UploadSensor->Addr - Sys.AddrOffset);
"501
[e ( _AnswerInitUpLoad (2 , *U + &U _SenserSwitch_F2B * -> . *U _UploadSensor 9 `ux -> -> # *U &U _SenserSwitch_F2B `ui `ux -> - -> . *U _UploadSensor 8 `i -> . _Sys 1 `i `uc ]
[e $U 112  ]
"502
[e :U 111 ]
[; ;ProSwitch.c: 502: else
[; ;ProSwitch.c: 503: {
"503
{
[; ;ProSwitch.c: 504: Breaker = FilterBreaker(addr + Sys.AddrOffset);
"504
[e = _Breaker ( _FilterBreaker (1 -> + -> _addr `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 505: if (Breaker->Addr != 0xFF)
"505
[e $ ! != -> . *U _Breaker 0 `i -> 255 `i 113  ]
[; ;ProSwitch.c: 506: {
"506
{
[; ;ProSwitch.c: 507: Breaker->Addr = addr + Sys.AddrOffset;
"507
[e = . *U _Breaker 0 -> + -> _addr `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 508: AnswerInitUpLoad(0x0F, Breaker->Addr - Sys.AddrOffset);
"508
[e ( _AnswerInitUpLoad (2 , -> -> 15 `i `uc -> - -> . *U _Breaker 0 `i -> . _Sys 1 `i `uc ]
"509
}
[e :U 113 ]
"510
}
[e :U 112 ]
[; ;ProSwitch.c: 509: }
[; ;ProSwitch.c: 510: }
[; ;ProSwitch.c: 511: break;
"511
[e $U 67  ]
[; ;ProSwitch.c: 513: case 0x00:
"513
[e :U 114 ]
[; ;ProSwitch.c: 514: if (Can_Peking.Buf[2] == 0x02)
"514
[e $ ! == -> *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux `i -> 2 `i 115  ]
[; ;ProSwitch.c: 515: {
"515
{
[; ;ProSwitch.c: 516: Breaker->CurValue |= 0x01;
"516
[e =| . *U _Breaker 20 -> -> 1 `i `ui ]
[; ;ProSwitch.c: 517: Breaker->Flag |= 0x01;
"517
[e =| . *U _Breaker 17 -> -> 1 `i `uc ]
"518
}
[; ;ProSwitch.c: 518: } else if (Can_Peking.Buf[2] |= 0x01)
[e $U 116  ]
[e :U 115 ]
[e $ ! != -> =| *U + &U . _Can_Peking 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Peking 1 `ui `ux -> -> 1 `i `uc `i -> -> -> 0 `i `uc `i 117  ]
[; ;ProSwitch.c: 519: {
"519
{
[; ;ProSwitch.c: 520: Breaker->CurValue &= ~0x01;
"520
[e =& . *U _Breaker 20 -> ~ -> 1 `i `ui ]
[; ;ProSwitch.c: 521: Breaker->Flag &= ~0x01;
"521
[e =& . *U _Breaker 17 -> ~ -> 1 `i `uc ]
"522
}
[e :U 117 ]
"523
[e :U 116 ]
[; ;ProSwitch.c: 522: }
[; ;ProSwitch.c: 523: Can_Feimo.ID = MakeFeimoCanId(0x00, 0x09, 0x00, 0x01, 0x1F, Breaker->Addr);
[e = . _Can_Feimo 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 9 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc -> -> 31 `i `uc . *U _Breaker 0 ]
[; ;ProSwitch.c: 524: Can_Feimo.Buf[0] = Breaker->CurValue;
"524
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> . *U _Breaker 20 `uc ]
[; ;ProSwitch.c: 525: Can_Feimo.Buf[1] = Breaker->CurValue >> 8;
"525
[e = *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> . *U _Breaker 20 -> 8 `i `uc ]
[; ;ProSwitch.c: 526: Can_Feimo.Buf[2] = timeHex;
"526
[e = *U + &U . _Can_Feimo 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> _timeHex `uc ]
[; ;ProSwitch.c: 527: Can_Feimo.Buf[3] = timeHex >> 8;
"527
[e = *U + &U . _Can_Feimo 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 8 `i `uc ]
[; ;ProSwitch.c: 528: Can_Feimo.Buf[4] = timeHex >> 16;
"528
[e = *U + &U . _Can_Feimo 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 16 `i `uc ]
[; ;ProSwitch.c: 529: Can_Feimo.Buf[5] = timeHex >> 24;
"529
[e = *U + &U . _Can_Feimo 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 24 `i `uc ]
[; ;ProSwitch.c: 530: Can_Feimo.Buf[6] = Breaker->Crc;
"530
[e = *U + &U . _Can_Feimo 1 * -> -> -> 6 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux . *U _Breaker 1 ]
[; ;ProSwitch.c: 531: Can_Feimo.Len = 7;
"531
[e = . _Can_Feimo 2 -> -> 7 `i `uc ]
[; ;ProSwitch.c: 532: CanUpSend(Can_Feimo);
"532
[e ( _CanUpSend (1 _Can_Feimo ]
[; ;ProSwitch.c: 533: break;
"533
[e $U 67  ]
[; ;ProSwitch.c: 534: case 0x03:
"534
[e :U 118 ]
[; ;ProSwitch.c: 536: break;
"536
[e $U 67  ]
[; ;ProSwitch.c: 537: case 0x06:
"537
[e :U 119 ]
[; ;ProSwitch.c: 538: if (UploadSensor->SensorFlag & 0x80)
"538
[e $ ! != & -> . *U _UploadSensor 1 `i -> 128 `i -> 0 `i 120  ]
[; ;ProSwitch.c: 539: Can_Feimo.ID = MakeFeimoCanId(0x00, 0x01, 0x01, 0x01, UploadSensor->Name, UploadSensor->Addr);
"539
[e = . _Can_Feimo 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 1 `i `uc -> -> 1 `i `uc -> -> 1 `i `uc . *U _UploadSensor 9 . *U _UploadSensor 8 ]
[e $U 121  ]
"540
[e :U 120 ]
[; ;ProSwitch.c: 540: else
[; ;ProSwitch.c: 541: Can_Feimo.ID = MakeFeimoCanId(0x00, 0x01, 0x00, 0x01, UploadSensor->Name, UploadSensor->Addr);
"541
[e = . _Can_Feimo 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 1 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc . *U _UploadSensor 9 . *U _UploadSensor 8 ]
[e :U 121 ]
[; ;ProSwitch.c: 543: if (sensorType == 0x0D || sensorType == 0x12 || sensorType == 0x11 || sensorType == 0x0E)
"543
[e $ ! || || || == -> _sensorType `i -> 13 `i == -> _sensorType `i -> 18 `i == -> _sensorType `i -> 17 `i == -> _sensorType `i -> 14 `i 122  ]
[; ;ProSwitch.c: 544: return;
"544
[e $UE 61  ]
[e :U 122 ]
[; ;ProSwitch.c: 545: CanData = MakeUpLoadData(0, 0x01, CanData);
"545
[e = _CanData ( _MakeUpLoadData (3 , , -> -> 0 `i `uc -> -> 1 `i `uc _CanData ]
[; ;ProSwitch.c: 546: Can_Feimo.Buf[0] = CanData;
"546
[e = *U + &U . _Can_Feimo 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> _CanData `uc ]
[; ;ProSwitch.c: 547: Can_Feimo.Buf[1] = CanData >> 8;
"547
[e = *U + &U . _Can_Feimo 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _CanData -> 8 `i `uc ]
[; ;ProSwitch.c: 548: Can_Feimo.Buf[2] = timeHex;
"548
[e = *U + &U . _Can_Feimo 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> _timeHex `uc ]
[; ;ProSwitch.c: 549: Can_Feimo.Buf[3] = timeHex >> 8;
"549
[e = *U + &U . _Can_Feimo 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 8 `i `uc ]
[; ;ProSwitch.c: 550: Can_Feimo.Buf[4] = timeHex >> 16;
"550
[e = *U + &U . _Can_Feimo 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 16 `i `uc ]
[; ;ProSwitch.c: 551: Can_Feimo.Buf[5] = timeHex >> 24;
"551
[e = *U + &U . _Can_Feimo 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux -> >> _timeHex -> 24 `i `uc ]
[; ;ProSwitch.c: 552: Can_Feimo.Buf[6] = UploadSensor->Crc;
"552
[e = *U + &U . _Can_Feimo 1 * -> -> -> 6 `i `ui `ux -> -> # *U &U . _Can_Feimo 1 `ui `ux . *U _UploadSensor 0 ]
[; ;ProSwitch.c: 553: Can_Feimo.Len = 7;
"553
[e = . _Can_Feimo 2 -> -> 7 `i `uc ]
[; ;ProSwitch.c: 554: CanUpSend(Can_Feimo);
"554
[e ( _CanUpSend (1 _Can_Feimo ]
[; ;ProSwitch.c: 555: break;
"555
[e $U 67  ]
[; ;ProSwitch.c: 556: default:
"556
[e :U 123 ]
[; ;ProSwitch.c: 557: break;
"557
[e $U 67  ]
"558
}
[; ;ProSwitch.c: 558: }
[e $U 67  ]
"318
[e :U 68 ]
[e [\ _cmd , $ -> -> 2 `i `uc 69
 , $ -> -> 1 `i `uc 110
 , $ -> -> 0 `i `uc 114
 , $ -> -> 3 `i `uc 118
 , $ -> -> 6 `i `uc 119
 123 ]
"558
[e :U 67 ]
[; ;ProSwitch.c: 559: }
"559
[e :UE 61 ]
}
"562
[v _SyncClk `(v ~T0 @X0 1 ef ]
"563
{
[; ;ProSwitch.c: 562: void SyncClk(void)
[; ;ProSwitch.c: 563: {
[e :U _SyncClk ]
[f ]
"564
[v _ClkCan `S5 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 564: CCan ClkCan;
[; ;ProSwitch.c: 565: ClkCan.ID = MakePekingCanId(0, 0, 0x10, 0x00, 0x04);
"565
[e = . _ClkCan 3 ( _MakePekingCanId (4 , , , , -> -> 0 `i `uc -> -> 0 `i `uc -> -> 16 `i `uc -> -> 0 `i `uc -> -> 4 `i `uc ]
[; ;ProSwitch.c: 566: ClkCan.Len = 5;
"566
[e = . _ClkCan 2 -> -> 5 `i `uc ]
[; ;ProSwitch.c: 567: ClkCan.Buf[0] = 0;
"567
[e = *U + &U . _ClkCan 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _ClkCan 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 568: ClkCan.Buf[1] = 0;
"568
[e = *U + &U . _ClkCan 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _ClkCan 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 569: ClkCan.Buf[2] = 0;
"569
[e = *U + &U . _ClkCan 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _ClkCan 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 570: ClkCan.Buf[3] = 0;
"570
[e = *U + &U . _ClkCan 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _ClkCan 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 571: ClkCan.Buf[4] = 0x01;
"571
[e = *U + &U . _ClkCan 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _ClkCan 1 `ui `ux -> -> 1 `i `uc ]
[; ;ProSwitch.c: 572: CanDownSend(ClkCan);
"572
[e ( _CanDownSend (1 _ClkCan ]
[; ;ProSwitch.c: 573: }
"573
[e :UE 124 ]
}
"575
[v _SetWornValue `(v ~T0 @X0 1 ef1`uc ]
"576
{
[; ;ProSwitch.c: 575: void SetWornValue(u8 Addr)
[; ;ProSwitch.c: 576: {
[e :U _SetWornValue ]
"575
[v _Addr `uc ~T0 @X0 1 r1 ]
"576
[f ]
"577
[v _WronValue `d ~T0 @X0 1 a ]
"578
[v _type `uc ~T0 @X0 1 a ]
"579
[v _i `ui ~T0 @X0 1 a ]
"580
[v _WornSetCan `S5 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 577: double WronValue;
[; ;ProSwitch.c: 578: u8 type;
[; ;ProSwitch.c: 579: u16 i;
[; ;ProSwitch.c: 580: CCan WornSetCan;
[; ;ProSwitch.c: 581: type = SenserSwitch_F2B[LocalSensors[Addr - 1].Name];
"581
[e = _type *U + &U _SenserSwitch_F2B * -> . *U + &U _LocalSensors * -> -> - -> _Addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 9 `ux -> -> # *U &U _SenserSwitch_F2B `ui `ux ]
[; ;ProSwitch.c: 582: WornSetCan.ID = MakePekingCanId(0, type, Addr, 0x00, 0x03);
"582
[e = . _WornSetCan 3 ( _MakePekingCanId (4 , , , , -> -> 0 `i `uc _type _Addr -> -> 0 `i `uc -> -> 3 `i `uc ]
[; ;ProSwitch.c: 583: WornSetCan.Buf[0] = 0;
"583
[e = *U + &U . _WornSetCan 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _WornSetCan 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 584: WornSetCan.Buf[1] = 0;
"584
[e = *U + &U . _WornSetCan 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _WornSetCan 1 `ui `ux -> -> 0 `i `uc ]
[; ;ProSwitch.c: 586: if (LocalSensors[Addr - 1].UpWarn != 0xFFFF)
"586
[e $ ! != . *U + &U _LocalSensors * -> -> - -> _Addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 2 -> 65535 `ui 126  ]
[; ;ProSwitch.c: 587: {
"587
{
[; ;ProSwitch.c: 588: WronValue = (LocalSensors[Addr - 1].UpWarn & 0x0FFF);
"588
[e = _WronValue -> & . *U + &U _LocalSensors * -> -> - -> _Addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 2 -> -> 4095 `i `ui `d ]
[; ;ProSwitch.c: 589: i = GetChuShu((LocalSensors[Addr - 1].UpWarn >> 13) & 0x03);
"589
[e = _i ( _GetChuShu (1 -> & >> . *U + &U _LocalSensors * -> -> - -> _Addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 2 -> 13 `i -> -> 3 `i `ui `uc ]
[; ;ProSwitch.c: 590: WronValue /= i;
"590
[e =/ _WronValue -> _i `d ]
"591
}
[; ;ProSwitch.c: 591: } else
[e $U 127  ]
[e :U 126 ]
[; ;ProSwitch.c: 592: {
"592
{
[; ;ProSwitch.c: 593: WronValue = 0x0FFF;
"593
[e = _WronValue -> -> 4095 `i `d ]
"594
}
[e :U 127 ]
[; ;ProSwitch.c: 594: }
[; ;ProSwitch.c: 595: ConverToMFloat(WronValue);
"595
[e ( _ConverToMFloat (1 _WronValue ]
[; ;ProSwitch.c: 596: BufCopy(&WornSetCan.Buf[2], sensor_result, 3);
"596
[e ( _BufCopy (3 , , &U *U + &U . _WornSetCan 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _WornSetCan 1 `ui `ux &U _sensor_result -> -> 3 `i `ui ]
[; ;ProSwitch.c: 597: if (LocalSensors[Addr - 1].DownWarn == 0xFFFF)
"597
[e $ ! == . *U + &U _LocalSensors * -> -> - -> _Addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 5 -> 65535 `ui 128  ]
[; ;ProSwitch.c: 598: WronValue = 0x8FFF;
"598
[e = _WronValue -> -> 36863 `ui `d ]
[e $U 129  ]
"599
[e :U 128 ]
[; ;ProSwitch.c: 599: else
[; ;ProSwitch.c: 600: {
"600
{
[; ;ProSwitch.c: 601: WronValue = (LocalSensors[Addr - 1].DownDuanDian & 0x0FFF);
"601
[e = _WronValue -> & . *U + &U _LocalSensors * -> -> - -> _Addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 6 -> -> 4095 `i `ui `d ]
[; ;ProSwitch.c: 602: i = GetChuShu((LocalSensors[Addr - 1].UpWarn >> 13) & 0x03);
"602
[e = _i ( _GetChuShu (1 -> & >> . *U + &U _LocalSensors * -> -> - -> _Addr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 2 -> 13 `i -> -> 3 `i `ui `uc ]
[; ;ProSwitch.c: 603: WronValue /= i;
"603
[e =/ _WronValue -> _i `d ]
"604
}
[e :U 129 ]
[; ;ProSwitch.c: 604: }
[; ;ProSwitch.c: 605: ConverToMFloat(WronValue);
"605
[e ( _ConverToMFloat (1 _WronValue ]
[; ;ProSwitch.c: 606: BufCopy(&WornSetCan.Buf[5], sensor_result, 3);
"606
[e ( _BufCopy (3 , , &U *U + &U . _WornSetCan 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _WornSetCan 1 `ui `ux &U _sensor_result -> -> 3 `i `ui ]
[; ;ProSwitch.c: 607: WornSetCan.Len = 8;
"607
[e = . _WornSetCan 2 -> -> 8 `i `uc ]
[; ;ProSwitch.c: 608: CanDownSend(WornSetCan);
"608
[e ( _CanDownSend (1 _WornSetCan ]
[; ;ProSwitch.c: 609: }
"609
[e :UE 125 ]
}
"611
[v _DuanDianPro `(v ~T0 @X0 1 ef ]
"612
{
[; ;ProSwitch.c: 611: void DuanDianPro(void)
[; ;ProSwitch.c: 612: {
[e :U _DuanDianPro ]
[f ]
"613
[v _i `uc ~T0 @X0 1 a ]
[; ;ProSwitch.c: 613: u8 i;
[; ;ProSwitch.c: 614: for (i = 0; i < 5; i++)
"614
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 5 `i 131  ]
[e $U 132  ]
"615
[e :U 131 ]
[; ;ProSwitch.c: 615: {
{
[; ;ProSwitch.c: 616: CheckBreaker(i);
"616
[e ( _CheckBreaker (1 _i ]
"617
}
"614
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 5 `i 131  ]
[e :U 132 ]
"617
}
[; ;ProSwitch.c: 617: }
[; ;ProSwitch.c: 618: }
"618
[e :UE 130 ]
}
"620
[v _CheckBreaker `(v ~T0 @X0 1 ef1`uc ]
"621
{
[; ;ProSwitch.c: 620: void CheckBreaker(u8 BreakerIndex)
[; ;ProSwitch.c: 621: {
[e :U _CheckBreaker ]
"620
[v _BreakerIndex `uc ~T0 @X0 1 r1 ]
"621
[f ]
"622
[v _i `uc ~T0 @X0 1 a ]
[v _ActSensorAddr `uc ~T0 @X0 1 a ]
"623
[v _Breaker `*S3 ~T0 @X0 1 a ]
"624
[v _ActSensor `*S1 ~T0 @X0 1 a ]
"625
[v _RemoteSensor `*S2 ~T0 @X0 1 a ]
"626
[v _BreakerLog `S5 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 622: u8 i, ActSensorAddr;
[; ;ProSwitch.c: 623: _Breaker* Breaker;
[; ;ProSwitch.c: 624: _LocalSensor* ActSensor;
[; ;ProSwitch.c: 625: _RemoteSensor* RemoteSensor;
[; ;ProSwitch.c: 626: CCan BreakerLog;
[; ;ProSwitch.c: 628: Breaker = GetBreakerByIndex(BreakerIndex);
"628
[e = _Breaker ( _GetBreakerByIndex (1 _BreakerIndex ]
[; ;ProSwitch.c: 629: if (Breaker->Addr == 0)
"629
[e $ ! == -> . *U _Breaker 0 `i -> 0 `i 135  ]
[; ;ProSwitch.c: 630: return;
"630
[e $UE 134  ]
[e :U 135 ]
[; ;ProSwitch.c: 632: if (Breaker->ForceControlFlag)
"632
[e $ ! != -> . *U _Breaker 2 `i -> -> -> 0 `i `uc `i 136  ]
[; ;ProSwitch.c: 633: {
"633
{
[; ;ProSwitch.c: 634: if ((Breaker->ForceControlPort & 0x01) && (!(Breaker->Flag & 0x01)) && (MsTickDiff(Breaker->ActTick) >= 3000))
"634
[e $ ! && && != & -> . *U _Breaker 3 `i -> 1 `i -> 0 `i ! != & -> . *U _Breaker 17 `i -> 1 `i -> 0 `i >= ( _MsTickDiff (1 . *U _Breaker 19 -> -> 3000 `i `ui 137  ]
[; ;ProSwitch.c: 635: {
"635
{
[; ;ProSwitch.c: 636: Breaker->ActTick = SYS_TICK;
"636
[e = . *U _Breaker 19 _SYS_TICK ]
[; ;ProSwitch.c: 637: Breaker->Flag = !Breaker->Flag;
"637
[e = . *U _Breaker 17 -> -> ! != -> . *U _Breaker 17 `i -> -> -> 0 `i `uc `i `i `uc ]
[; ;ProSwitch.c: 638: BreakPower(Breaker->Addr - Sys.AddrOffset);
"638
[e ( _BreakPower (1 -> - -> . *U _Breaker 0 `i -> . _Sys 1 `i `uc ]
"639
}
[; ;ProSwitch.c: 639: } else if ((!(Breaker->ForceControlPort & 0x01) && (Breaker->Flag & 0x01)) && (MsTickDiff(Breaker->ActTick) >= 3000))
[e $U 138  ]
[e :U 137 ]
[e $ ! && && ! != & -> . *U _Breaker 3 `i -> 1 `i -> 0 `i != & -> . *U _Breaker 17 `i -> 1 `i -> 0 `i >= ( _MsTickDiff (1 . *U _Breaker 19 -> -> 3000 `i `ui 139  ]
[; ;ProSwitch.c: 640: {
"640
{
[; ;ProSwitch.c: 641: Breaker->ActTick = SYS_TICK;
"641
[e = . *U _Breaker 19 _SYS_TICK ]
[; ;ProSwitch.c: 642: RePower(Breaker->Addr - Sys.AddrOffset);
"642
[e ( _RePower (1 -> - -> . *U _Breaker 0 `i -> . _Sys 1 `i `uc ]
"643
}
[e :U 139 ]
"644
[e :U 138 ]
[; ;ProSwitch.c: 643: }
[; ;ProSwitch.c: 644: return;
[e $UE 134  ]
"645
}
[e :U 136 ]
[; ;ProSwitch.c: 645: }
[; ;ProSwitch.c: 647: for(i=0;i<Breaker->Break3_0Cnt;i++)
"647
{
[e = _i -> -> 0 `i `uc ]
[e $U 143  ]
"648
[e :U 140 ]
[; ;ProSwitch.c: 648: {
{
[; ;ProSwitch.c: 649: ActSensor = &LocalSensors[Breaker->Break3_0Addrs[i] - 1];
"649
[e = _ActSensor &U *U + &U _LocalSensors * -> -> - -> *U + &U . *U _Breaker 12 * -> _i `ux -> -> # *U &U . *U _Breaker 12 `ui `ux `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux ]
[; ;ProSwitch.c: 650: if(ActSensor->CtrFlag & 0x02)
"650
[e $ ! != & -> . *U _ActSensor 10 `i -> 2 `i -> 0 `i 144  ]
[; ;ProSwitch.c: 651: {
"651
{
[; ;ProSwitch.c: 652: if((!(Breaker->Flag & 0x01)) && (MsTickDiff(Breaker->ActTick) >= 3000))
"652
[e $ ! && ! != & -> . *U _Breaker 17 `i -> 1 `i -> 0 `i >= ( _MsTickDiff (1 . *U _Breaker 19 -> -> 3000 `i `ui 145  ]
[; ;ProSwitch.c: 653: {
"653
{
[; ;ProSwitch.c: 654: Breaker->ActTick = SYS_TICK;
"654
[e = . *U _Breaker 19 _SYS_TICK ]
[; ;ProSwitch.c: 655: Breaker->Flag = !Breaker->Flag;
"655
[e = . *U _Breaker 17 -> -> ! != -> . *U _Breaker 17 `i -> -> -> 0 `i `uc `i `i `uc ]
[; ;ProSwitch.c: 656: BreakPower(Breaker->Addr - Sys.AddrOffset);
"656
[e ( _BreakPower (1 -> - -> . *U _Breaker 0 `i -> . _Sys 1 `i `uc ]
"657
}
[e :U 145 ]
[; ;ProSwitch.c: 657: }
[; ;ProSwitch.c: 658: return;
"658
[e $UE 134  ]
"659
}
[e :U 144 ]
"660
}
"647
[e ++ _i -> -> 1 `i `uc ]
[e :U 143 ]
[e $ < -> _i `i -> . *U _Breaker 13 `i 140  ]
[e :U 141 ]
"660
}
[; ;ProSwitch.c: 659: }
[; ;ProSwitch.c: 660: }
[; ;ProSwitch.c: 662: if (Breaker->CrossControlFlag)
"662
[e $ ! != -> . *U _Breaker 4 `i -> -> -> 0 `i `uc `i 146  ]
[; ;ProSwitch.c: 663: {
"663
{
[; ;ProSwitch.c: 664: if ((Breaker->CrossControlPort & 0x01)&&((Breaker->Flag & 0x01) == 0))
"664
[e $ ! && != & -> . *U _Breaker 5 `i -> 1 `i -> 0 `i == & -> . *U _Breaker 17 `i -> 1 `i -> 0 `i 147  ]
[; ;ProSwitch.c: 665: {
"665
{
[; ;ProSwitch.c: 666: BreakPower(Breaker->Addr - Sys.AddrOffset);
"666
[e ( _BreakPower (1 -> - -> . *U _Breaker 0 `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 667: Breaker->Flag = !Breaker->Flag;
"667
[e = . *U _Breaker 17 -> -> ! != -> . *U _Breaker 17 `i -> -> -> 0 `i `uc `i `i `uc ]
"668
}
[e :U 147 ]
[; ;ProSwitch.c: 668: }
[; ;ProSwitch.c: 669: return;
"669
[e $UE 134  ]
"670
}
[e :U 146 ]
[; ;ProSwitch.c: 670: }
[; ;ProSwitch.c: 672: for (i = 0; i < Breaker->RelevanceLocalSensorCnt; i++)
"672
{
[e = _i -> -> 0 `i `uc ]
[e $U 151  ]
"673
[e :U 148 ]
[; ;ProSwitch.c: 673: {
{
[; ;ProSwitch.c: 674: ActSensorAddr = Breaker->LocalTriggerAddrs[i] - Sys.AddrOffset;
"674
[e = _ActSensorAddr -> - -> *U + &U . *U _Breaker 7 * -> _i `ux -> -> # *U &U . *U _Breaker 7 `ui `ux `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 675: ActSensor = &LocalSensors[ActSensorAddr - 1];
"675
[e = _ActSensor &U *U + &U _LocalSensors * -> -> - -> _ActSensorAddr `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux ]
[; ;ProSwitch.c: 677: if (
[; ;ProSwitch.c: 678: ((Breaker->LocalTriggers[i] & 0x01) && (ActSensor->CtrFlag & (0x01)))
[; ;ProSwitch.c: 679: || ((Breaker->LocalTriggers[i] & 0x10) && (ActSensor->CtrFlag & (0x10)))
[; ;ProSwitch.c: 680: || (((Breaker->LocalTriggers[i] & 0xC0) == 0xC0) && ((ActSensor->CurValue & 0x0001) == 0x0001))
[; ;ProSwitch.c: 681: || (((Breaker->LocalTriggers[i] & 0xA0) == 0xA0) && ((ActSensor->CurValue & 0x0001) == 0x0000))
[; ;ProSwitch.c: 682: )
"682
[e $ ! || || || && != & -> *U + &U . *U _Breaker 6 * -> _i `ux -> -> # *U &U . *U _Breaker 6 `ui `ux `i -> 1 `i -> 0 `i != & -> . *U _ActSensor 10 `i -> 1 `i -> 0 `i && != & -> *U + &U . *U _Breaker 6 * -> _i `ux -> -> # *U &U . *U _Breaker 6 `ui `ux `i -> 16 `i -> 0 `i != & -> . *U _ActSensor 10 `i -> 16 `i -> 0 `i && == & -> *U + &U . *U _Breaker 6 * -> _i `ux -> -> # *U &U . *U _Breaker 6 `ui `ux `i -> 192 `i -> 192 `i == & . *U _ActSensor 13 -> -> 1 `i `ui -> -> 1 `i `ui && == & -> *U + &U . *U _Breaker 6 * -> _i `ux -> -> # *U &U . *U _Breaker 6 `ui `ux `i -> 160 `i -> 160 `i == & . *U _ActSensor 13 -> -> 1 `i `ui -> -> 0 `i `ui 152  ]
[; ;ProSwitch.c: 683: {
"683
{
[; ;ProSwitch.c: 684: if (((Breaker->Flag & 0x01) == 0) && (MsTickDiff(Breaker->ActTick) >= 3000))
"684
[e $ ! && == & -> . *U _Breaker 17 `i -> 1 `i -> 0 `i >= ( _MsTickDiff (1 . *U _Breaker 19 -> -> 3000 `i `ui 153  ]
[; ;ProSwitch.c: 685: {
"685
{
[; ;ProSwitch.c: 686: Breaker->ActTick = SYS_TICK;
"686
[e = . *U _Breaker 19 _SYS_TICK ]
[; ;ProSwitch.c: 687: Breaker->Flag = !Breaker->Flag;
"687
[e = . *U _Breaker 17 -> -> ! != -> . *U _Breaker 17 `i -> -> -> 0 `i `uc `i `i `uc ]
[; ;ProSwitch.c: 688: BreakPower(Breaker->Addr - Sys.AddrOffset);
"688
[e ( _BreakPower (1 -> - -> . *U _Breaker 0 `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 689: Breaker->TriggerAddr = ActSensor->Addr;
"689
[e = . *U _Breaker 18 . *U _ActSensor 8 ]
[; ;ProSwitch.c: 691: BreakerLog.ID = MakeFeimoCanId(0, 0x0A, 0x00, 0x01, 0x1F, Breaker->Addr);
"691
[e = . _BreakerLog 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 10 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc -> -> 31 `i `uc . *U _Breaker 0 ]
[; ;ProSwitch.c: 692: BreakerLog.Buf[0] = ActSensor->Addr;
"692
[e = *U + &U . _BreakerLog 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux . *U _ActSensor 8 ]
[; ;ProSwitch.c: 693: BreakerLog.Buf[1] = (Breaker->LocalTriggers[i] | 0x80);
"693
[e = *U + &U . _BreakerLog 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> | -> *U + &U . *U _Breaker 6 * -> _i `ux -> -> # *U &U . *U _Breaker 6 `ui `ux `i -> 128 `i `uc ]
[; ;ProSwitch.c: 694: BreakerLog.Buf[2] = (ActSensor->CtrFlag);
"694
[e = *U + &U . _BreakerLog 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux . *U _ActSensor 10 ]
[; ;ProSwitch.c: 696: TimeChange();
"696
[e ( _TimeChange ..  ]
[; ;ProSwitch.c: 697: BreakerLog.Buf[3] = timeHex;
"697
[e = *U + &U . _BreakerLog 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> _timeHex `uc ]
[; ;ProSwitch.c: 698: BreakerLog.Buf[4] = timeHex >> 8;
"698
[e = *U + &U . _BreakerLog 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> >> _timeHex -> 8 `i `uc ]
[; ;ProSwitch.c: 699: BreakerLog.Buf[5] = timeHex >> 16;
"699
[e = *U + &U . _BreakerLog 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> >> _timeHex -> 16 `i `uc ]
[; ;ProSwitch.c: 700: BreakerLog.Buf[6] = timeHex >> 24;
"700
[e = *U + &U . _BreakerLog 1 * -> -> -> 6 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> >> _timeHex -> 24 `i `uc ]
[; ;ProSwitch.c: 701: BreakerLog.Len = 7;
"701
[e = . _BreakerLog 2 -> -> 7 `i `uc ]
[; ;ProSwitch.c: 702: CanUpSend(BreakerLog);
"702
[e ( _CanUpSend (1 _BreakerLog ]
[; ;ProSwitch.c: 703: Breaker->ActCnt++;
"703
[e ++ . *U _Breaker 16 -> -> 1 `i `uc ]
"704
}
[e :U 153 ]
[; ;ProSwitch.c: 704: }
[; ;ProSwitch.c: 705: return;
"705
[e $UE 134  ]
"706
}
[e :U 152 ]
"707
}
"672
[e ++ _i -> -> 1 `i `uc ]
[e :U 151 ]
[e $ < -> _i `i -> . *U _Breaker 10 `i 148  ]
[e :U 149 ]
"707
}
[; ;ProSwitch.c: 706: }
[; ;ProSwitch.c: 707: }
[; ;ProSwitch.c: 709: for (i = 0; i < Breaker->RelevanceRemoteSensorCnt; i++)
"709
{
[e = _i -> -> 0 `i `uc ]
[e $U 157  ]
"710
[e :U 154 ]
[; ;ProSwitch.c: 710: {
{
[; ;ProSwitch.c: 711: RemoteSensor = GetRemoteSensor(Breaker->RemoteTriggerAddrs[i]);
"711
[e = _RemoteSensor ( _GetRemoteSensor (1 *U + &U . *U _Breaker 9 * -> _i `ux -> -> # *U &U . *U _Breaker 9 `ui `ux ]
[; ;ProSwitch.c: 712: if (RemoteSensor->Addr == 0)
"712
[e $ ! == -> . *U _RemoteSensor 0 `i -> 0 `i 158  ]
[; ;ProSwitch.c: 713: continue;
"713
[e $U 156  ]
[e :U 158 ]
[; ;ProSwitch.c: 714: if (
[; ;ProSwitch.c: 715: ((Breaker->RemoteTriggers[i] & 0x01) && (RemoteSensor->CtrFlag & (0x01)))
[; ;ProSwitch.c: 716: || ((Breaker->RemoteTriggers[i] & 0x10) && (RemoteSensor->CtrFlag & (0x10)))
[; ;ProSwitch.c: 717: || (((Breaker->RemoteTriggers[i] & 0xC0) == 0xC0) && ((RemoteSensor->CurValue & 0x0001) == 0x0001))
[; ;ProSwitch.c: 718: || (((Breaker->RemoteTriggers[i] & 0xA0) == 0xA0) && ((RemoteSensor->CurValue & 0x0001) == 0x0000))
[; ;ProSwitch.c: 719: )
"719
[e $ ! || || || && != & -> *U + &U . *U _Breaker 8 * -> _i `ux -> -> # *U &U . *U _Breaker 8 `ui `ux `i -> 1 `i -> 0 `i != & -> . *U _RemoteSensor 5 `i -> 1 `i -> 0 `i && != & -> *U + &U . *U _Breaker 8 * -> _i `ux -> -> # *U &U . *U _Breaker 8 `ui `ux `i -> 16 `i -> 0 `i != & -> . *U _RemoteSensor 5 `i -> 16 `i -> 0 `i && == & -> *U + &U . *U _Breaker 8 * -> _i `ux -> -> # *U &U . *U _Breaker 8 `ui `ux `i -> 192 `i -> 192 `i == & . *U _RemoteSensor 7 -> -> 1 `i `ui -> -> 1 `i `ui && == & -> *U + &U . *U _Breaker 8 * -> _i `ux -> -> # *U &U . *U _Breaker 8 `ui `ux `i -> 160 `i -> 160 `i == & . *U _RemoteSensor 7 -> -> 1 `i `ui -> -> 0 `i `ui 159  ]
[; ;ProSwitch.c: 720: {
"720
{
[; ;ProSwitch.c: 721: if (((Breaker->Flag & 0x01) == 0) && (MsTickDiff(Breaker->ActTick) >= 3000))
"721
[e $ ! && == & -> . *U _Breaker 17 `i -> 1 `i -> 0 `i >= ( _MsTickDiff (1 . *U _Breaker 19 -> -> 3000 `i `ui 160  ]
[; ;ProSwitch.c: 722: {
"722
{
[; ;ProSwitch.c: 723: Breaker->ActTick = SYS_TICK;
"723
[e = . *U _Breaker 19 _SYS_TICK ]
[; ;ProSwitch.c: 724: Breaker->Flag = !Breaker->Flag;
"724
[e = . *U _Breaker 17 -> -> ! != -> . *U _Breaker 17 `i -> -> -> 0 `i `uc `i `i `uc ]
[; ;ProSwitch.c: 725: BreakPower(Breaker->Addr - Sys.AddrOffset);
"725
[e ( _BreakPower (1 -> - -> . *U _Breaker 0 `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 726: Breaker->TriggerAddr = RemoteSensor->Addr;
"726
[e = . *U _Breaker 18 . *U _RemoteSensor 0 ]
[; ;ProSwitch.c: 727: BreakerLog.ID = MakeFeimoCanId(0, 0x0A, 0x00, 0x01, 0x1F, Breaker->Addr);
"727
[e = . _BreakerLog 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 10 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc -> -> 31 `i `uc . *U _Breaker 0 ]
[; ;ProSwitch.c: 728: BreakerLog.Buf[0] = RemoteSensor->Addr;
"728
[e = *U + &U . _BreakerLog 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux . *U _RemoteSensor 0 ]
[; ;ProSwitch.c: 729: BreakerLog.Buf[1] = (Breaker->RemoteTriggers[i] | 0x80);
"729
[e = *U + &U . _BreakerLog 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> | -> *U + &U . *U _Breaker 8 * -> _i `ux -> -> # *U &U . *U _Breaker 8 `ui `ux `i -> 128 `i `uc ]
[; ;ProSwitch.c: 730: BreakerLog.Buf[2] = (RemoteSensor->CtrFlag);
"730
[e = *U + &U . _BreakerLog 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux . *U _RemoteSensor 5 ]
[; ;ProSwitch.c: 731: TimeChange();
"731
[e ( _TimeChange ..  ]
[; ;ProSwitch.c: 732: BreakerLog.Buf[3] = timeHex;
"732
[e = *U + &U . _BreakerLog 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> _timeHex `uc ]
[; ;ProSwitch.c: 733: BreakerLog.Buf[4] = timeHex >> 8;
"733
[e = *U + &U . _BreakerLog 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> >> _timeHex -> 8 `i `uc ]
[; ;ProSwitch.c: 734: BreakerLog.Buf[5] = timeHex >> 16;
"734
[e = *U + &U . _BreakerLog 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> >> _timeHex -> 16 `i `uc ]
[; ;ProSwitch.c: 735: BreakerLog.Buf[6] = timeHex >> 24;
"735
[e = *U + &U . _BreakerLog 1 * -> -> -> 6 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> >> _timeHex -> 24 `i `uc ]
[; ;ProSwitch.c: 736: BreakerLog.Len = 7;
"736
[e = . _BreakerLog 2 -> -> 7 `i `uc ]
[; ;ProSwitch.c: 737: Breaker->ActCnt++;
"737
[e ++ . *U _Breaker 16 -> -> 1 `i `uc ]
[; ;ProSwitch.c: 738: CanUpSend(BreakerLog);
"738
[e ( _CanUpSend (1 _BreakerLog ]
"739
}
[e :U 160 ]
[; ;ProSwitch.c: 739: }
[; ;ProSwitch.c: 740: return;
"740
[e $UE 134  ]
"741
}
[e :U 159 ]
"742
}
"709
[e :U 156 ]
[e ++ _i -> -> 1 `i `uc ]
[e :U 157 ]
[e $ < -> _i `i -> . *U _Breaker 11 `i 154  ]
[e :U 155 ]
"742
}
[; ;ProSwitch.c: 741: }
[; ;ProSwitch.c: 742: }
[; ;ProSwitch.c: 744: if ((Breaker->Flag & 0x01) && (MsTickDiff(Breaker->ActTick) >= 3000))
"744
[e $ ! && != & -> . *U _Breaker 17 `i -> 1 `i -> 0 `i >= ( _MsTickDiff (1 . *U _Breaker 19 -> -> 3000 `i `ui 161  ]
[; ;ProSwitch.c: 745: {
"745
{
[; ;ProSwitch.c: 746: Breaker->ActTick = SYS_TICK;
"746
[e = . *U _Breaker 19 _SYS_TICK ]
[; ;ProSwitch.c: 747: Breaker->Flag = !Breaker->Flag;
"747
[e = . *U _Breaker 17 -> -> ! != -> . *U _Breaker 17 `i -> -> -> 0 `i `uc `i `i `uc ]
[; ;ProSwitch.c: 748: RePower(Breaker->Addr - Sys.AddrOffset);
"748
[e ( _RePower (1 -> - -> . *U _Breaker 0 `i -> . _Sys 1 `i `uc ]
[; ;ProSwitch.c: 749: BreakerLog.ID = MakeFeimoCanId(0, 0x0A, 0x00, 0x01, 0x1F, Breaker->Addr);
"749
[e = . _BreakerLog 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 10 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc -> -> 31 `i `uc . *U _Breaker 0 ]
[; ;ProSwitch.c: 750: RemoteSensor = GetRemoteSensor(Breaker->TriggerAddr);
"750
[e = _RemoteSensor ( _GetRemoteSensor (1 . *U _Breaker 18 ]
[; ;ProSwitch.c: 751: Breaker->ActCnt++;
"751
[e ++ . *U _Breaker 16 -> -> 1 `i `uc ]
[; ;ProSwitch.c: 752: if (RemoteSensor->Addr == 0)
"752
[e $ ! == -> . *U _RemoteSensor 0 `i -> 0 `i 162  ]
[; ;ProSwitch.c: 753: {
"753
{
[; ;ProSwitch.c: 754: ActSensor = &LocalSensors[Breaker->TriggerAddr - Sys.AddrOffset - 1];
"754
[e = _ActSensor &U *U + &U _LocalSensors * -> -> - - -> . *U _Breaker 18 `i -> . _Sys 1 `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux ]
[; ;ProSwitch.c: 755: BreakerLog.Buf[0] = ActSensor->Addr;
"755
[e = *U + &U . _BreakerLog 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux . *U _ActSensor 8 ]
[; ;ProSwitch.c: 756: BreakerLog.Buf[1] = (Breaker->LocalTriggers[Breaker->TriggerAddr - 1] & (~0x80));
"756
[e = *U + &U . _BreakerLog 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> & -> *U + &U . *U _Breaker 6 * -> -> - -> . *U _Breaker 18 `i -> 1 `i `ui `ux -> -> # *U &U . *U _Breaker 6 `ui `ux `i ~ -> 128 `i `uc ]
[; ;ProSwitch.c: 757: BreakerLog.Buf[2] = (ActSensor->CtrFlag);
"757
[e = *U + &U . _BreakerLog 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux . *U _ActSensor 10 ]
"758
}
[; ;ProSwitch.c: 758: } else
[e $U 163  ]
[e :U 162 ]
[; ;ProSwitch.c: 759: {
"759
{
[; ;ProSwitch.c: 760: BreakerLog.Buf[0] = RemoteSensor->Addr;
"760
[e = *U + &U . _BreakerLog 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux . *U _RemoteSensor 0 ]
[; ;ProSwitch.c: 761: BreakerLog.Buf[1] = (Breaker->RemoteTriggers[GetRemoteSensorIndex(Breaker->TriggerAddr)] & (~0x80));
"761
[e = *U + &U . _BreakerLog 1 * -> -> -> 1 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> & -> *U + &U . *U _Breaker 8 * -> ( _GetRemoteSensorIndex (1 . *U _Breaker 18 `ux -> -> # *U &U . *U _Breaker 8 `ui `ux `i ~ -> 128 `i `uc ]
[; ;ProSwitch.c: 762: BreakerLog.Buf[2] = (RemoteSensor->CtrFlag);
"762
[e = *U + &U . _BreakerLog 1 * -> -> -> 2 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux . *U _RemoteSensor 5 ]
"763
}
[e :U 163 ]
[; ;ProSwitch.c: 763: }
[; ;ProSwitch.c: 765: TimeChange();
"765
[e ( _TimeChange ..  ]
[; ;ProSwitch.c: 766: BreakerLog.Buf[3] = timeHex;
"766
[e = *U + &U . _BreakerLog 1 * -> -> -> 3 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> _timeHex `uc ]
[; ;ProSwitch.c: 767: BreakerLog.Buf[4] = timeHex >> 8;
"767
[e = *U + &U . _BreakerLog 1 * -> -> -> 4 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> >> _timeHex -> 8 `i `uc ]
[; ;ProSwitch.c: 768: BreakerLog.Buf[5] = timeHex >> 16;
"768
[e = *U + &U . _BreakerLog 1 * -> -> -> 5 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> >> _timeHex -> 16 `i `uc ]
[; ;ProSwitch.c: 769: BreakerLog.Buf[6] = timeHex >> 24;
"769
[e = *U + &U . _BreakerLog 1 * -> -> -> 6 `i `ui `ux -> -> # *U &U . _BreakerLog 1 `ui `ux -> >> _timeHex -> 24 `i `uc ]
[; ;ProSwitch.c: 770: BreakerLog.Len = 7;
"770
[e = . _BreakerLog 2 -> -> 7 `i `uc ]
[; ;ProSwitch.c: 771: CanUpSend(BreakerLog);
"771
[e ( _CanUpSend (1 _BreakerLog ]
"772
}
[e :U 161 ]
[; ;ProSwitch.c: 772: }
[; ;ProSwitch.c: 773: }
"773
[e :UE 134 ]
}
"775
[v _PowerDataDeal `(v ~T0 @X0 1 ef1`S5 ]
"776
{
[; ;ProSwitch.c: 775: void PowerDataDeal(CCan PowerDataCan)
[; ;ProSwitch.c: 776: {
[e :U _PowerDataDeal ]
"775
[v _PowerDataCan `S5 ~T0 @X0 1 r1 ]
"776
[f ]
"777
[v _FramCnt `uc ~T0 @X0 1 a ]
[; ;ProSwitch.c: 777: u8 FramCnt;
[; ;ProSwitch.c: 778: FramCnt = ((PowerDataCan.Buf[0] >> 3) & 0x07);
"778
[e = _FramCnt -> & >> -> *U + &U . _PowerDataCan 1 * -> -> -> 0 `i `ui `ux -> -> # *U &U . _PowerDataCan 1 `ui `ux `i -> 3 `i -> 7 `i `uc ]
[; ;ProSwitch.c: 779: BufCopy(PekingPowerData[FramCnt], PowerDataCan.Buf, PowerDataCan.Len);
"779
[e ( _BufCopy (3 , , &U *U + &U _PekingPowerData * -> _FramCnt `ux -> * -> # *U &U *U &U _PekingPowerData `ui -> -> 8 `i `ui `ux &U . _PowerDataCan 1 -> . _PowerDataCan 2 `ui ]
[; ;ProSwitch.c: 780: }
"780
[e :UE 164 ]
}
"782
[v _UploadPowerData `(v ~T0 @X0 1 ef ]
"783
{
[; ;ProSwitch.c: 782: void UploadPowerData(void)
[; ;ProSwitch.c: 783: {
[e :U _UploadPowerData ]
[f ]
"784
[v _PowerUploadCan `S5 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 784: CCan PowerUploadCan;
[; ;ProSwitch.c: 786: if (((LocalSensors[15].CtrFlag & 0x10) == 0x00) && LocalSensors[15].Name == 0x39)
"786
[e $ ! && == & -> . *U + &U _LocalSensors * -> -> -> 15 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 10 `i -> 16 `i -> 0 `i == -> . *U + &U _LocalSensors * -> -> -> 15 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 9 `i -> 57 `i 166  ]
[; ;ProSwitch.c: 787: {
"787
{
[; ;ProSwitch.c: 788: PowerUploadCan.ID = MakeFeimoCanId(0, 0x0E, 0x00, 0x01, 0x39, LocalSensors[15].Addr);
"788
[e = . _PowerUploadCan 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 14 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc -> -> 57 `i `uc . *U + &U _LocalSensors * -> -> -> 15 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 8 ]
[; ;ProSwitch.c: 789: if (PowerInfoUploader.UploadCnt < 6)
"789
[e $ ! < -> . _PowerInfoUploader 0 `i -> 6 `i 167  ]
[; ;ProSwitch.c: 790: {
"790
{
[; ;ProSwitch.c: 791: BufCopy(PowerUploadCan.Buf, PekingPowerData[PowerInfoUploader.UploadCnt++], 8);
"791
[e ( _BufCopy (3 , , &U . _PowerUploadCan 1 &U *U + &U _PekingPowerData * -> ++ . _PowerInfoUploader 0 -> -> 1 `i `uc `ux -> * -> # *U &U *U &U _PekingPowerData `ui -> -> 8 `i `ui `ux -> -> 8 `i `ui ]
[; ;ProSwitch.c: 792: PowerUploadCan.Len = 8;
"792
[e = . _PowerUploadCan 2 -> -> 8 `i `uc ]
"793
}
[; ;ProSwitch.c: 793: } else
[e $U 168  ]
[e :U 167 ]
[; ;ProSwitch.c: 794: {
"794
{
[; ;ProSwitch.c: 795: BufCopy(PowerUploadCan.Buf, PekingPowerData[PowerInfoUploader.UploadCnt++], 3);
"795
[e ( _BufCopy (3 , , &U . _PowerUploadCan 1 &U *U + &U _PekingPowerData * -> ++ . _PowerInfoUploader 0 -> -> 1 `i `uc `ux -> * -> # *U &U *U &U _PekingPowerData `ui -> -> 8 `i `ui `ux -> -> 3 `i `ui ]
[; ;ProSwitch.c: 796: PowerUploadCan.Len = 3;
"796
[e = . _PowerUploadCan 2 -> -> 3 `i `uc ]
[; ;ProSwitch.c: 797: PowerInfoUploader.UploadCnt = 0;
"797
[e = . _PowerInfoUploader 0 -> -> 0 `i `uc ]
"798
}
[e :U 168 ]
[; ;ProSwitch.c: 798: }
[; ;ProSwitch.c: 799: CanUpSend(PowerUploadCan);
"799
[e ( _CanUpSend (1 _PowerUploadCan ]
[; ;ProSwitch.c: 800: PowerInfoUploader.Tick = SYS_TICK;
"800
[e = . _PowerInfoUploader 1 -> _SYS_TICK `uc ]
"801
}
[e :U 166 ]
[; ;ProSwitch.c: 801: }
[; ;ProSwitch.c: 802: }
"802
[e :UE 165 ]
}
"805
[v _UpLoadSensorData `(v ~T0 @X0 1 ef ]
"806
{
[; ;ProSwitch.c: 805: void UpLoadSensorData(void)
[; ;ProSwitch.c: 806: {
[e :U _UpLoadSensorData ]
[f ]
"807
[v _i `uc ~T0 @X0 1 a ]
[v _index `uc ~T0 @X0 1 a ]
[v _temp `uc ~T0 @X0 1 a ]
"808
[v _DataInfo `S5 ~T0 @X0 1 a ]
"809
[v _UploadSensor `*S1 ~T0 @X0 1 a ]
"810
[v _UploadBreaker `*S3 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 807: u8 i, index,temp;
[; ;ProSwitch.c: 808: CCan DataInfo;
[; ;ProSwitch.c: 809: _LocalSensor* UploadSensor;
[; ;ProSwitch.c: 810: _Breaker* UploadBreaker;
[; ;ProSwitch.c: 812: if(Sys.UploadCnt >= 8)
"812
[e $ ! >= -> . _Sys 4 `i -> 8 `i 170  ]
[; ;ProSwitch.c: 813: Sys.UploadCnt = 0;
"813
[e = . _Sys 4 -> -> 0 `i `uc ]
[e :U 170 ]
[; ;ProSwitch.c: 814: DataInfo.ID = MakeFeimoCanId(Sys.UploadCnt, 0x55, 0x00, 0x01, 0x37, Sys.AddrOffset);
"814
[e = . _DataInfo 3 ( _MakeFeimoCanId (4 , , , , , . _Sys 4 -> -> 85 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc -> -> 55 `i `uc . _Sys 1 ]
[; ;ProSwitch.c: 816: for (i = 0; i < 2; i++)
"816
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 2 `i 171  ]
[e $U 172  ]
"817
[e :U 171 ]
[; ;ProSwitch.c: 817: {
{
[; ;ProSwitch.c: 818: temp = 0;
"818
[e = _temp -> -> 0 `i `uc ]
[; ;ProSwitch.c: 819: index = Sys.UploadCnt * 2 + i;
"819
[e = _index -> + * -> . _Sys 4 `i -> 2 `i -> _i `i `uc ]
[; ;ProSwitch.c: 820: UploadBreaker = GetBreaker(Sys.AddrOffset+index + 1);
"820
[e = _UploadBreaker ( _GetBreaker (1 -> + + -> . _Sys 1 `i -> _index `i -> 1 `i `uc ]
[; ;ProSwitch.c: 821: if(UploadBreaker->Addr == 0)
"821
[e $ ! == -> . *U _UploadBreaker 0 `i -> 0 `i 174  ]
[; ;ProSwitch.c: 822: {
"822
{
[; ;ProSwitch.c: 823: UploadSensor = &LocalSensors[index];
"823
[e = _UploadSensor &U *U + &U _LocalSensors * -> _index `ux -> -> # *U &U _LocalSensors `ui `ux ]
[; ;ProSwitch.c: 824: DataInfo.Buf[4*i] = (UploadSensor->CurValue & 0xFF);
"824
[e = *U + &U . _DataInfo 1 * -> -> * -> 4 `i -> _i `i `ui `ux -> -> # *U &U . _DataInfo 1 `ui `ux -> & . *U _UploadSensor 13 -> -> 255 `i `ui `uc ]
[; ;ProSwitch.c: 826: if(UploadSensor->SensorFlag & 0x40)
"826
[e $ ! != & -> . *U _UploadSensor 1 `i -> 64 `i -> 0 `i 175  ]
[; ;ProSwitch.c: 827: temp |= 0x40;
"827
[e =| _temp -> -> 64 `i `uc ]
[e :U 175 ]
[; ;ProSwitch.c: 828: if(UploadSensor->SensorFlag & 0x01)
"828
[e $ ! != & -> . *U _UploadSensor 1 `i -> 1 `i -> 0 `i 176  ]
[; ;ProSwitch.c: 829: temp |= 0x80;
"829
[e =| _temp -> -> 128 `i `uc ]
[e :U 176 ]
[; ;ProSwitch.c: 831: DataInfo.Buf[4*i+1] = ((UploadSensor->CurValue >> 8) & 0x7F);
"831
[e = *U + &U . _DataInfo 1 * -> -> + * -> 4 `i -> _i `i -> 1 `i `ui `ux -> -> # *U &U . _DataInfo 1 `ui `ux -> & >> . *U _UploadSensor 13 -> 8 `i -> -> 127 `i `ui `uc ]
[; ;ProSwitch.c: 832: DataInfo.Buf[4*i+2] = UploadSensor->Crc;
"832
[e = *U + &U . _DataInfo 1 * -> -> + * -> 4 `i -> _i `i -> 2 `i `ui `ux -> -> # *U &U . _DataInfo 1 `ui `ux . *U _UploadSensor 0 ]
[; ;ProSwitch.c: 833: DataInfo.Buf[4*i+3] = ((UploadSensor->Name & 0x3F) | (temp & 0xC0));
"833
[e = *U + &U . _DataInfo 1 * -> -> + * -> 4 `i -> _i `i -> 3 `i `ui `ux -> -> # *U &U . _DataInfo 1 `ui `ux -> | & -> . *U _UploadSensor 9 `i -> 63 `i & -> _temp `i -> 192 `i `uc ]
"834
}
[; ;ProSwitch.c: 834: }
[e $U 177  ]
"835
[e :U 174 ]
[; ;ProSwitch.c: 835: else
[; ;ProSwitch.c: 836: {
"836
{
[; ;ProSwitch.c: 837: DataInfo.Buf[4*i] = UploadBreaker->CurValue;
"837
[e = *U + &U . _DataInfo 1 * -> -> * -> 4 `i -> _i `i `ui `ux -> -> # *U &U . _DataInfo 1 `ui `ux -> . *U _UploadBreaker 20 `uc ]
[; ;ProSwitch.c: 838: DataInfo.Buf[4*i+1] = UploadBreaker->CurValue >> 8;
"838
[e = *U + &U . _DataInfo 1 * -> -> + * -> 4 `i -> _i `i -> 1 `i `ui `ux -> -> # *U &U . _DataInfo 1 `ui `ux -> >> . *U _UploadBreaker 20 -> 8 `i `uc ]
[; ;ProSwitch.c: 839: DataInfo.Buf[4*i+2] = UploadBreaker->Crc;
"839
[e = *U + &U . _DataInfo 1 * -> -> + * -> 4 `i -> _i `i -> 2 `i `ui `ux -> -> # *U &U . _DataInfo 1 `ui `ux . *U _UploadBreaker 1 ]
[; ;ProSwitch.c: 840: DataInfo.Buf[4*i+3] = 0x1F | 0x40;
"840
[e = *U + &U . _DataInfo 1 * -> -> + * -> 4 `i -> _i `i -> 3 `i `ui `ux -> -> # *U &U . _DataInfo 1 `ui `ux -> | -> 31 `i -> 64 `i `uc ]
[; ;ProSwitch.c: 841: LocalSensors[(UploadBreaker->Addr)-1].Crc = UploadBreaker->Crc;
"841
[e = . *U + &U _LocalSensors * -> -> - -> . *U _UploadBreaker 0 `i -> 1 `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux 0 . *U _UploadBreaker 1 ]
"842
}
[e :U 177 ]
"843
}
"816
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 2 `i 171  ]
[e :U 172 ]
"843
}
[; ;ProSwitch.c: 842: }
[; ;ProSwitch.c: 843: }
[; ;ProSwitch.c: 844: DataInfo.Len = 8;
"844
[e = . _DataInfo 2 -> -> 8 `i `uc ]
[; ;ProSwitch.c: 845: CanUpSend(DataInfo);
"845
[e ( _CanUpSend (1 _DataInfo ]
[; ;ProSwitch.c: 846: Sys.UploadCnt++;
"846
[e ++ . _Sys 4 -> -> 1 `i `uc ]
[; ;ProSwitch.c: 847: }
"847
[e :UE 169 ]
}
"852
[v _UpLoadControlInfo `(v ~T0 @X0 1 ef ]
"853
{
[; ;ProSwitch.c: 852: void UpLoadControlInfo(void)
[; ;ProSwitch.c: 853: {
[e :U _UpLoadControlInfo ]
[f ]
"854
[v _i `uc ~T0 @X0 1 a ]
[v _j `uc ~T0 @X0 1 a ]
[v _temp `uc ~T0 @X0 1 a ]
"855
[v _ControlInfo `S5 ~T0 @X0 1 a ]
"856
[v _Sensor `*S1 ~T0 @X0 1 a ]
"857
[v _Breaker `*S3 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 854: u8 i,j,temp;
[; ;ProSwitch.c: 855: CCan ControlInfo;
[; ;ProSwitch.c: 856: _LocalSensor* Sensor;
[; ;ProSwitch.c: 857: _Breaker* Breaker;
[; ;ProSwitch.c: 858: ControlInfo.ID = MakeFeimoCanId(0, 0x56, 0x01, 0x01, 0x37, Sys.AddrOffset);
"858
[e = . _ControlInfo 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 86 `i `uc -> -> 1 `i `uc -> -> 1 `i `uc -> -> 55 `i `uc . _Sys 1 ]
[; ;ProSwitch.c: 859: for(i=0;i<8;i++)
"859
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i -> 8 `i 179  ]
[e $U 180  ]
"860
[e :U 179 ]
[; ;ProSwitch.c: 860: {
{
[; ;ProSwitch.c: 861: for(j=0;j<2;j++)
"861
{
[e = _j -> -> 0 `i `uc ]
[e $ < -> _j `i -> 2 `i 182  ]
[e $U 183  ]
"862
[e :U 182 ]
[; ;ProSwitch.c: 862: {
{
[; ;ProSwitch.c: 863: temp = 0;
"863
[e = _temp -> -> 0 `i `uc ]
[; ;ProSwitch.c: 864: Breaker = GetBreaker(Sys.AddrOffset+((2*i)+j) + 1);
"864
[e = _Breaker ( _GetBreaker (1 -> + + -> . _Sys 1 `i + * -> 2 `i -> _i `i -> _j `i -> 1 `i `uc ]
[; ;ProSwitch.c: 865: if(Breaker->Addr == 0)
"865
[e $ ! == -> . *U _Breaker 0 `i -> 0 `i 185  ]
[; ;ProSwitch.c: 866: {
"866
{
[; ;ProSwitch.c: 867: Sensor = &LocalSensors[((2*i)+j)];
"867
[e = _Sensor &U *U + &U _LocalSensors * -> -> + * -> 2 `i -> _i `i -> _j `i `ui `ux -> -> # *U &U _LocalSensors `ui `ux ]
[; ;ProSwitch.c: 868: if(Sensor->SensorFlag & 0x40)
"868
[e $ ! != & -> . *U _Sensor 1 `i -> 64 `i -> 0 `i 186  ]
[; ;ProSwitch.c: 869: {
"869
{
[; ;ProSwitch.c: 870: temp |= 0x08;
"870
[e =| _temp -> -> 8 `i `uc ]
[; ;ProSwitch.c: 871: temp |= Sensor->CurValue & 0x01;
"871
[e =| _temp -> & . *U _Sensor 13 -> -> 1 `i `ui `uc ]
"872
}
[; ;ProSwitch.c: 872: }
[e $U 187  ]
"873
[e :U 186 ]
[; ;ProSwitch.c: 873: else
[; ;ProSwitch.c: 874: temp |= Sensor->CtrFlag & 0x01;
"874
[e =| _temp -> & -> . *U _Sensor 10 `i -> 1 `i `uc ]
[e :U 187 ]
[; ;ProSwitch.c: 875: if(Sensor->SensorFlag & 0x01)
"875
[e $ ! != & -> . *U _Sensor 1 `i -> 1 `i -> 0 `i 188  ]
[; ;ProSwitch.c: 876: temp |= 0x02;
"876
[e =| _temp -> -> 2 `i `uc ]
[e :U 188 ]
[; ;ProSwitch.c: 877: if(j==0)
"877
[e $ ! == -> _j `i -> 0 `i 189  ]
[; ;ProSwitch.c: 878: {
"878
{
[; ;ProSwitch.c: 879: ControlInfo.Buf[i] = temp;
"879
[e = *U + &U . _ControlInfo 1 * -> _i `ux -> -> # *U &U . _ControlInfo 1 `ui `ux _temp ]
[; ;ProSwitch.c: 880: ControlInfo.Buf[i] <<= 4;
"880
[e =<< *U + &U . _ControlInfo 1 * -> _i `ux -> -> # *U &U . _ControlInfo 1 `ui `ux -> 4 `i ]
"881
}
[; ;ProSwitch.c: 881: }
[e $U 190  ]
"882
[e :U 189 ]
[; ;ProSwitch.c: 882: else if(j==1)
[e $ ! == -> _j `i -> 1 `i 191  ]
[; ;ProSwitch.c: 883: {
"883
{
[; ;ProSwitch.c: 884: ControlInfo.Buf[i] |= temp;
"884
[e =| *U + &U . _ControlInfo 1 * -> _i `ux -> -> # *U &U . _ControlInfo 1 `ui `ux _temp ]
"885
}
[e :U 191 ]
"886
[e :U 190 ]
}
[; ;ProSwitch.c: 885: }
[; ;ProSwitch.c: 886: }
[e $U 192  ]
"887
[e :U 185 ]
[; ;ProSwitch.c: 887: else
[; ;ProSwitch.c: 888: {
"888
{
[; ;ProSwitch.c: 889: temp |= 0x0C;
"889
[e =| _temp -> -> 12 `i `uc ]
[; ;ProSwitch.c: 890: temp |= Breaker->CurValue & 0x03;
"890
[e =| _temp -> & . *U _Breaker 20 -> -> 3 `i `ui `uc ]
[; ;ProSwitch.c: 891: if(j==0)
"891
[e $ ! == -> _j `i -> 0 `i 193  ]
[; ;ProSwitch.c: 892: {
"892
{
[; ;ProSwitch.c: 893: ControlInfo.Buf[i] = temp;
"893
[e = *U + &U . _ControlInfo 1 * -> _i `ux -> -> # *U &U . _ControlInfo 1 `ui `ux _temp ]
[; ;ProSwitch.c: 894: ControlInfo.Buf[i] <<= 4;
"894
[e =<< *U + &U . _ControlInfo 1 * -> _i `ux -> -> # *U &U . _ControlInfo 1 `ui `ux -> 4 `i ]
"895
}
[; ;ProSwitch.c: 895: }
[e $U 194  ]
"896
[e :U 193 ]
[; ;ProSwitch.c: 896: else if(j==1)
[e $ ! == -> _j `i -> 1 `i 195  ]
[; ;ProSwitch.c: 897: {
"897
{
[; ;ProSwitch.c: 898: ControlInfo.Buf[i] |= temp;
"898
[e =| *U + &U . _ControlInfo 1 * -> _i `ux -> -> # *U &U . _ControlInfo 1 `ui `ux _temp ]
"899
}
[e :U 195 ]
"900
[e :U 194 ]
}
[e :U 192 ]
"901
}
"861
[e ++ _j -> -> 1 `i `uc ]
[e $ < -> _j `i -> 2 `i 182  ]
[e :U 183 ]
"901
}
"902
}
"859
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i -> 8 `i 179  ]
[e :U 180 ]
"902
}
[; ;ProSwitch.c: 899: }
[; ;ProSwitch.c: 900: }
[; ;ProSwitch.c: 901: }
[; ;ProSwitch.c: 902: }
[; ;ProSwitch.c: 903: ControlInfo.Len = 8;
"903
[e = . _ControlInfo 2 -> -> 8 `i `uc ]
[; ;ProSwitch.c: 904: CanUpSend(ControlInfo);
"904
[e ( _CanUpSend (1 _ControlInfo ]
[; ;ProSwitch.c: 905: }
"905
[e :UE 178 ]
}
"907
[v _SensorOnlineCheck `(v ~T0 @X0 1 ef ]
"908
{
[; ;ProSwitch.c: 907: void SensorOnlineCheck(void)
[; ;ProSwitch.c: 908: {
[e :U _SensorOnlineCheck ]
[f ]
"909
[v _i `uc ~T0 @X0 1 a ]
"910
[v _Sensor `*S1 ~T0 @X0 1 a ]
"911
[v _Breaker `*S3 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 909: u8 i;
[; ;ProSwitch.c: 910: _LocalSensor* Sensor;
[; ;ProSwitch.c: 911: _Breaker* Breaker;
[; ;ProSwitch.c: 912: for (i = 0; i < 16 - 1; i++)
"912
{
[e = _i -> -> 0 `i `uc ]
[e $ < -> _i `i - -> 16 `i -> 1 `i 197  ]
[e $U 198  ]
"913
[e :U 197 ]
[; ;ProSwitch.c: 913: {
{
[; ;ProSwitch.c: 914: Breaker = GetBreaker(Sys.AddrOffset + i + 1);
"914
[e = _Breaker ( _GetBreaker (1 -> + + -> . _Sys 1 `i -> _i `i -> 1 `i `uc ]
[; ;ProSwitch.c: 915: if (Breaker->Addr == 0)
"915
[e $ ! == -> . *U _Breaker 0 `i -> 0 `i 200  ]
[; ;ProSwitch.c: 916: {
"916
{
[; ;ProSwitch.c: 917: Sensor = &LocalSensors[i];
"917
[e = _Sensor &U *U + &U _LocalSensors * -> _i `ux -> -> # *U &U _LocalSensors `ui `ux ]
[; ;ProSwitch.c: 918: if (MsTickDiff(Sensor->Tick) >= Sensor->OffTimeout)
"918
[e $ ! >= ( _MsTickDiff (1 . *U _Sensor 14 . *U _Sensor 12 201  ]
[; ;ProSwitch.c: 919: {
"919
{
[; ;ProSwitch.c: 920: Sensor->SensorFlag |= 0x01;
"920
[e =| . *U _Sensor 1 -> -> 1 `i `uc ]
[; ;ProSwitch.c: 921: Sensor->CtrFlag |= 0x10;
"921
[e =| . *U _Sensor 10 -> -> 16 `i `uc ]
"922
}
[e :U 201 ]
"923
}
[; ;ProSwitch.c: 922: }
[; ;ProSwitch.c: 923: } else
[e $U 202  ]
[e :U 200 ]
[; ;ProSwitch.c: 924: {
"924
{
[; ;ProSwitch.c: 925: if (MsTickDiff(Breaker->Tick) >= 20000)
"925
[e $ ! >= ( _MsTickDiff (1 . *U _Breaker 14 -> -> 20000 `i `ui 203  ]
[; ;ProSwitch.c: 926: {
"926
{
[; ;ProSwitch.c: 927: Breaker->Flag |= 0x02;
"927
[e =| . *U _Breaker 17 -> -> 2 `i `uc ]
[; ;ProSwitch.c: 928: Breaker->Addr = 0;
"928
[e = . *U _Breaker 0 -> -> 0 `i `uc ]
[; ;ProSwitch.c: 929: Breaker->Crc = 0;
"929
[e = . *U _Breaker 1 -> -> 0 `i `uc ]
"930
}
[e :U 203 ]
"931
}
[e :U 202 ]
"932
}
"912
[e ++ _i -> -> 1 `i `uc ]
[e $ < -> _i `i - -> 16 `i -> 1 `i 197  ]
[e :U 198 ]
"932
}
[; ;ProSwitch.c: 930: }
[; ;ProSwitch.c: 931: }
[; ;ProSwitch.c: 932: }
[; ;ProSwitch.c: 933: }
"933
[e :UE 196 ]
}
"935
[v _Get3_0Config `(v ~T0 @X0 1 ef ]
"936
{
[; ;ProSwitch.c: 935: void Get3_0Config(void)
[; ;ProSwitch.c: 936: {
[e :U _Get3_0Config ]
[f ]
"937
[v _Quest `S5 ~T0 @X0 1 a ]
[; ;ProSwitch.c: 937: CCan Quest;
[; ;ProSwitch.c: 938: Quest.ID = MakeFeimoCanId(0, 0x57, 0x00, 0x01, 0x37, Sys.AddrOffset);
"938
[e = . _Quest 3 ( _MakeFeimoCanId (4 , , , , , -> -> 0 `i `uc -> -> 87 `i `uc -> -> 0 `i `uc -> -> 1 `i `uc -> -> 55 `i `uc . _Sys 1 ]
[; ;ProSwitch.c: 939: Quest.Len = 0;
"939
[e = . _Quest 2 -> -> 0 `i `uc ]
[; ;ProSwitch.c: 940: CanUpSend(Quest);
"940
[e ( _CanUpSend (1 _Quest ]
[; ;ProSwitch.c: 941: }
"941
[e :UE 204 ]
}
